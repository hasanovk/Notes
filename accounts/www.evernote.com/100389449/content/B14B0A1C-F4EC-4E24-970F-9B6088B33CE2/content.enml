<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd"><en-note><div style="-evernote-webclip:true;"><div><span style="color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 30px; font-weight: bold;">Nested Objects</span><br /></div><div><span style="font-size: 16px;"><div style="font-size:100%;"><div style="font-size: 12px; background-image: url(file:///Applications/Evernote.app/Contents/Resources/common-editor-mac/&amp;quot;http://www.javacreed.com/wp-content/themes/PressGrid-3.3.1/images/bg/bg1.png&amp;quot;); background-attachment: scroll; background-color: rgb(244, 244, 244); background-position: 0px 0px; background-repeat: repeat repeat;"><div style="border-radius:0px;background:rgba(0, 0, 0, 0) none repeat scroll 0% 0%;box-shadow:none;"><div style="font-size:13px;background:rgb(255, 255, 255) none repeat scroll 0% 0%;"><div style="margin:30px 0px;font-size:12px;"><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">In this example we will describe how to deserialise nested objects, that is, objects within other objects. Here we will introduce a new entity, the author. A book, together with the title and ISBN can have a list of authors. On the other hand every author can have many books. The JSON object that will be using in this example differs from the previous one to cater for the new entity as shown next:</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">{</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  'title': 'Java Puzzlers: Traps, Pitfalls, and Corner Cases',</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  'isbn': '032133678X',</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  'authors':[</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      'id': 1,</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      'name': 'Joshua Bloch'</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    },</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      'id': 2,</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      'name': 'Neal Gafter'</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    }</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  ]</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">}</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">The structure of the JSON object was changed slightly and instead of primitives we have the authors as JSON objects as shown in the following image.</span></div><div style="background-image: none; background-attachment: scroll; background-color: rgb(255, 255, 255); border: 1px solid rgb(240, 240, 240); max-width: 96%; padding: 10px 5px 5px; text-align: center; margin: 5px auto 20px; width: 966px; background-position: 0% 0%; background-repeat: repeat repeat;"><div><a href="http://www.javacreed.com/wp-content/uploads/2012/12/Book-and-Authors-Json-Objects-Hierarchy.png" rel="prettyphoto" title="Book and Authors Json Objects Hierarchy" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 12px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px; color: rgb(0, 136, 204); text-decoration: none;"><en-media hash="4b0632769dc0fe7e4f28bf8661a43eb1" type="image/png" style="vertical-align:middle;height:auto;max-width:100%;border:0px none;margin:0px;padding:0px;width:auto;visibility:visible;opacity:1;" width="956" title="" /><br /></a></div><div style="margin: 0px; font-size: 11px; padding: 5px 0px;"><span style="font-size: 11px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 17px; font-style: italic;">Book and Authors Json Objects Hierarchy</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">We still have one book, only this time we have a more complex and detailed JSON object. Together with a </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">name</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">, the author also has an </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">id</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">. A new class called </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Author</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> is added to the model and the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Book</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> class now uses it to save the author information. This immediately leads to the following question.</span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><div><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; font-weight: bold;">How should we deserialise the new </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; font-weight: bold; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Author</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; font-weight: bold;"> class?</span></div><div><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">
There are several options. </span></div></div><ol style="padding:0px;margin:0px 0px 10px 25px;"><li><div><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;">We can update the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">BookDeserializer</span><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;"> and add the authors’ deserialisation code there. This has a limitation as it binds the deserialization of the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Author</span><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;"> with that of the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Book</span><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;">, and thus is not recommended.</span></div></li><li><div><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;">We can use the default Gson implementation, which will work well in this case as both the Java object (the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Author</span><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;"> class) and the JSON objects have the same fields’ names and can be deserialised as described in the article </span><a title="Simple Gson Example" href="http://www.javacreed.com/simple-gson-example/" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 12px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px; color: rgb(0, 136, 204); text-decoration: none;">Simple Gson Example</a><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;">.</span></div></li><li><div><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;">Alternatively, we can write an </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">AuthorDeserializer</span><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;"> class which will take care of the deserialisation of authors.</span></div></li></ol><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">We will start with the second option, to keep the changes to a minimum and the example as simple as possible. Then we add the new deserializer to show the flexibility of Gson.</span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">The </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonDeserializer</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> provides an instance of </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonDeserializationContext</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> (</span><a href="http://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/JsonDeserializationContext.html" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 13px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; color: rgb(0, 136, 204); text-decoration: none;">Java Doc</a><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">) as the third parameter to the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">deserialize()</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> method. We have not yet used this parameter. We can delegate the deserialisation of objects to the given instance of </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonDeserializationContext</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">. It will deserialise the given </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonElement</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> and returns an instance of the required type as shown below.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">Author author = context.deserialize(jsonElement, Author.class); </span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">The example shown above, is delegating the deserialisation of the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Author</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> class to the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">context</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">. In turn it will try to locate an instance of </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonDeserializer</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> that can deserialize it, if one is registered, otherwise it uses the default mechanism as described in the article titled: </span><a title="Simple Gson Example" href="http://www.javacreed.com/simple-gson-example/" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 13px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; color: rgb(0, 136, 204); text-decoration: none;">Simple Gson Example</a><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">.</span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">Our example uses an array of </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Author</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">s and thus we need to use the correct type as shown in the following example.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">package com.javacreed.examples.gson.part2;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import java.lang.reflect.Type;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonArray;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonDeserializationContext;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonDeserializer;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonElement;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonObject;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonParseException;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">public class BookDeserializer implements JsonDeserializer&lt;Book&gt; {</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  @Override</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  public Book deserialize(final JsonElement json, final Type typeOfT, final JsonDeserializationContext context)</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      throws JsonParseException {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">   final JsonObject jsonObject = json.getAsJsonObject();</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final String title = jsonObject.get("title").getAsString();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final String isbn10 = jsonObject.get("isbn-10").getAsString();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final String isbn13 = jsonObject.get("isbn-13").getAsString();</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    </span><span style="font-size: 13px; color: rgb(63, 127, 95); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">// Delegate the deserialization to the context</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    </span><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">Author[] authors = context.deserialize(jsonObject.get("authors"), Author[].class);</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final Book book = new Book();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    book.setTitle(title);</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    book.setIsbn10(isbn10);</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    book.setIsbn13(isbn13);</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    book.setAuthors(authors);</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    return book;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  }</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">}</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">Converting from a </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonPrimitive</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> to a </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonObject</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> was very easy and straightforward as we saw in the above example.</span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">Like the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">BookDeserialiser</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">, we can write the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">ArthurDeserialiser</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> and deserialise the author in a similar fashion we did with the book as shown next,</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">package com.javacreed.examples.gson.part2;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import java.lang.reflect.Type;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonDeserializationContext;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonDeserializer;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonElement;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonObject;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonParseException;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">public class AuthorDeserializer implements JsonDeserializer {</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  @Override</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  public Author deserialize(final JsonElement json, final Type typeOfT, final JsonDeserializationContext context)</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      throws JsonParseException {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final JsonObject jsonObject = json.getAsJsonObject();</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final Author author = new Author();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    author.setId(jsonObject.get("id").getAsInt());</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    author.setName(jsonObject.get("name").getAsString());</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    return author;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  }</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">}</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">In order to use the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">ArthurDeserialiser</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> we need to add this to the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">GsonBuilder</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> as shown next,</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">package com.javacreed.examples.gson.part2;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import java.io.IOException;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import java.io.InputStreamReader;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import java.io.Reader;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.Gson;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.GsonBuilder;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">public class Main {</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  public static void main(final String[] args) throws IOException {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    </span><span style="font-size: 13px; color: rgb(63, 127, 95); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">// Configure GSON</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final GsonBuilder gsonBuilder = new GsonBuilder();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    gsonBuilder.registerTypeAdapter(Book.class, new BookDeserializer());</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    </span><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">gsonBuilder.registerTypeAdapter(Author.class, new AuthorDeserializer());</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final Gson gson = gsonBuilder.create();</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    </span><span style="font-size: 13px; color: rgb(63, 127, 95); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">// Read the JSON data</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    try (Reader reader = new InputStreamReader(Main.class.getResourceAsStream("/part2/sample.json"), "UTF-8")) {</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      </span><span style="font-size: 13px; color: rgb(63, 127, 95); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">// Parse JSON to Java</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      final Book book = gson.fromJson(reader, Book.class);</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      System.out.println(book);</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    }</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  }</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">}</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">There is no need to change the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">BookDeserialiser</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> as the deserialisation of the author is delegated to the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">context</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">. This is another advantage of using the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">context</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> to deserialise the other/nested objects. Running the above code will produce the following.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">Java Puzzlers: Traps, Pitfalls, and Corner Cases [032133678X]</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">Written by:</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  &gt;&gt; [1] Joshua Bloch</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  &gt;&gt; [2] Neal Gafter</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">This concludes this section about nested objects. In the next section we will see how to refer to JSON objects located elsewhere in the JSON object tree.</span></div><h2 style="margin: 10px 0px; text-rendering: optimizelegibility; font-size: 30px;"><span style="font-size: 30px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 40px; font-weight: bold;">Object References</span></h2><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">Consider the following JSON.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">{</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  </span><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">'authors': [</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    {</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      'id': 1,</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      'name': 'Joshua Bloch'</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    },</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    {</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      'id': 2,</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      'name': 'Neal Gafter'</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    }</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  ]</span><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">,</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  'books': [</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      'title': 'Java Puzzlers: Traps, Pitfalls, and Corner Cases',</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      'isbn': '032133678X',</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      </span><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">'authors':[1, 2]</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    },</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      'title': 'Effective Java (2nd Edition)',</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      'isbn': '0321356683', </span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      </span><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">'authors':[1]</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    }</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  ]</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">}</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">The JSON object shown above comprise two authors and two books. The books have a reference to the authors through their ids as in this example the books’ field </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">authors</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> only contains the authors’ ids. This is quite a common scenario as this approach will reduce the size of the JSON object as duplicate objects are referred to by their id. The following image captures the new JSON object hierarchy.</span></div><div style="background-image: none; background-attachment: scroll; background-color: rgb(255, 255, 255); border: 1px solid rgb(240, 240, 240); max-width: 96%; padding: 10px 5px 5px; text-align: center; margin: 5px auto 20px; width: 957px; background-position: 0% 0%; background-repeat: repeat repeat;"><div><a href="http://www.javacreed.com/wp-content/uploads/2012/12/New-JSON-Object-Hierarchy.png" rel="prettyphoto" title="New JSON Object Hierarchy" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 12px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px; color: rgb(0, 136, 204); text-decoration: none;"><en-media hash="4dbbbe5c64bbdd64bb9b61c39953b481" type="image/png" style="vertical-align:middle;height:auto;max-width:100%;border:0px none;margin:0px;padding:0px;width:auto;visibility:visible;opacity:1;" width="947" title="" /><br /></a></div><div style="margin: 0px; font-size: 11px; padding: 5px 0px;"><span style="font-size: 11px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 17px; font-style: italic;">New JSON Object Hierarchy</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">This resembles relational database tables (</span><a href="http://en.wikipedia.org/wiki/Relational_database" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 13px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; color: rgb(0, 136, 204); text-decoration: none;">Wiki</a><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">), where the book has a foreign key (</span><a href="http://en.wikipedia.org/wiki/Foreign_key" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 13px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; color: rgb(0, 136, 204); text-decoration: none;">Wiki</a><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">) to the authors table. This new JSON object structure introduces new challenges that need to be addressed. When deserialising the books, we need to get hold of the authors that were deserialised from other branch of the JSON object hierarchy. The book only has the author id. The rest of the author information is found elsewhere, out of scope of the current context.</span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">There are various approaches to this problem, some of which are listed below.</span></div><ol style="padding:0px;margin:0px 0px 10px 25px;"><li><div><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;">One approach is to use a two stage processing. First we parse JSON to Java, that is deserialise the books and authors as these appear in JSON. The book class will contain an array of authors’ ids and not an array or authors. Then, in the second stage, we associate the objects and set the authors to their books. The following image shows the flow described here.
</span></div><div style="background-image: none; background-attachment: scroll; background-color: rgb(255, 255, 255); border: 1px solid rgb(240, 240, 240); max-width: 96%; padding: 10px 5px 5px; text-align: center; margin: 5px auto 20px; width: 610px; background-position: 0% 0%; background-repeat: repeat repeat;"><div><div><a href="http://www.javacreed.com/wp-content/uploads/2012/12/Two-Stage-Processing.png" rel="prettyphoto" title="Two Stage Processing" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 12px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px; color: rgb(0, 136, 204); text-decoration: none;"><en-media hash="6e5e498d2ba29e763781b9600831dc04" type="image/png" style="vertical-align:middle;height:auto;max-width:100%;border:0px none;margin:0px;padding:0px;width:auto;visibility:visible;opacity:1;" width="600" title="" /></a></div></div><div style="margin: 0px; font-size: 11px; padding: 5px 0px;"><span style="font-size: 11px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 17px; font-style: italic;">Two Stage Processing</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">This approach requires more classes but provides a great deal of flexibility and provides better separation of concerns. We need to create a set of classes that simply represent the JSON objects in Java, then we need another set of classes that matches our requirements (model). In this example, we have one </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Book</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> class and another </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Author</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> class, two in total. Using this approach, we will end up with four classes, two for the book and another two for the author. While in this example, it may seem feasible, this becomes more complex when we have tens, if not hundreds of classes.
</span></div></li><li><div><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;">Another approach is to provide the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">BookDeserialiser</span><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;"> class with all authors and then have the deserialiser retrieving the authors from this shared object. This approach removes the need of the middle stage as the JSON objects are deserialised into </span><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px; font-style: italic;">proper</span><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;"> Java objects without passing through an intermediate stage.
</span></div><div style="background-image: none; background-attachment: scroll; background-color: rgb(255, 255, 255); border: 1px solid rgb(240, 240, 240); max-width: 96%; padding: 10px 5px 5px; text-align: center; margin: 5px auto 20px; width: 552px; background-position: 0% 0%; background-repeat: repeat repeat;"><div><div><a href="http://www.javacreed.com/wp-content/uploads/2012/12/Shared-Object-between-Deserialisers.png" rel="prettyphoto" title="Shared Object between Deserialisers" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 12px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px; color: rgb(0, 136, 204); text-decoration: none;"><en-media hash="0d47318acc95af80a705c2c2b03846d4" type="image/png" style="vertical-align:middle;height:auto;max-width:100%;border:0px none;margin:0px;padding:0px;width:auto;visibility:visible;opacity:1;" width="542" title="" /></a></div></div><div style="margin: 0px; font-size: 11px; padding: 5px 0px;"><span style="font-size: 11px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 17px; font-style: italic;">Shared Object between Deserialisers</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">While this approach may sound appealing, it requires that the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">BookDeserialiser</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> and the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">AuthorDeserialiser</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> share a common object. Furthermore, when retrieving authors the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">BookDeserialiser</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> has to refer to this shared object instead of using the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonDeserializationContext</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> as we did before. This approach requires changes in several places. The deserialisers need to be modified and the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">main()</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> method too.
</span></div></li><li><div><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;">The </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">AuthorDeserialiser</span><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;"> can be made such that it caches the deserialised authors and return these next time requested by their id. This approach is quite attractive as it leverages the use of </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonDeserializationContext</span><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;"> and make the relationship transparent. Unfortunately it adds in complexity as the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">AuthorDeserialiser</span><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;"> needs to handle the caching. With that said, this approach requires the least changes as only the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">AuthorDeserialiser</span><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;"> is modified.
</span></div><div style="background-image: none; background-attachment: scroll; background-color: rgb(255, 255, 255); border: 1px solid rgb(240, 240, 240); max-width: 96%; padding: 10px 5px 5px; text-align: center; margin: 5px auto 20px; width: 610px; background-position: 0% 0%; background-repeat: repeat repeat;"><div><div><a href="http://www.javacreed.com/wp-content/uploads/2012/12/AuthorDeserialiser-using-Cache.png" rel="prettyphoto" title="AuthorDeserialiser using Cache" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 12px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px; color: rgb(0, 136, 204); text-decoration: none;"><en-media hash="3c41a6b973ec786af53e8a0fdf093191" type="image/png" style="vertical-align:middle;height:auto;max-width:100%;border:0px none;margin:0px;padding:0px;width:auto;visibility:visible;opacity:1;" width="600" title="" /></a></div></div><div style="margin: 0px; font-size: 11px; padding: 5px 0px;"><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 17px; font-style: italic; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">AuthorDeserialiser</span><span style="font-size: 11px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 17px; font-style: italic;"> using Cache</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">As shown in the image above, only the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">AuthorDeserialiser</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> accesses the cache object. The rest of the system is unaware of this.
</span></div></li></ol><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">All approaches are feasible and all have their advantages and disadvantages. We will use the third approach as it is the one that has the least impact on the project.</span></div><h4 style="margin: 10px 0px; text-rendering: optimizelegibility; font-size: 18px;"><span style="font-size: 18px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px; font-weight: bold;">Observation</span></h4><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">
In theory, the first approach provides better separation of concerns when compared with the other two. We can have the association logic within the new </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Data</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> class. But this requires many changes when compared with the third approach. That was the reason behind the use of the third approach over the other two. Always consider the effort required to make a change and try to minimise it.</span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">The JSON object shown above contains two arrays. We need to have a new Java class that reflects this JSON object.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">package com.javacreed.examples.gson.part3;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">public class Data {</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  private Author[] authors;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  private Book[] books;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  </span><span style="font-size: 13px; color: rgb(63, 127, 95); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">// Methods removed for brevity</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">}</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">The fields order determines which of the two sets is deserialised first. This does not matter in our case and the books can be deserialised before the authors as we will see later on.</span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">The </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">AuthorDeserialiser</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> need to be modified such that it caches the authors that were deserialised as shown next.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">package com.javacreed.examples.gson.part3;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import java.lang.reflect.Type;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import java.util.HashMap;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import java.util.Map;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonDeserializationContext;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonDeserializer;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonElement;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonObject;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonParseException;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonPrimitive;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">public class AuthorDeserializer implements JsonDeserializer&lt;Author&gt; {</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  private final ThreadLocal&lt;Map&lt;Integer, Author&gt;&gt; cache = new ThreadLocal&lt;Map&lt;Integer, Author&gt;&gt;() {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    @Override</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    protected Map&lt;Integer, Author&gt; initialValue() {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      return new HashMap&lt;&gt;();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    }</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  };</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  @Override</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  public Author deserialize(final JsonElement json, final Type typeOfT, final JsonDeserializationContext context)</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      throws JsonParseException {</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    </span><span style="font-size: 13px; color: rgb(63, 127, 95); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">// Only the ID is available</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    if (json.isJsonPrimitive()) {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      final JsonPrimitive primitive = json.getAsJsonPrimitive();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      return getOrCreate(primitive.getAsInt());</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    } </span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    </span><span style="font-size: 13px; color: rgb(63, 127, 95); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">// The whole object is available</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    if (json.isJsonObject()) {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      final JsonObject jsonObject = json.getAsJsonObject();</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      final Author author = getOrCreate(jsonObject.get("id").getAsInt());</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      author.setName(jsonObject.get("name").getAsString());</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      return author;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    }</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    throw new JsonParseException("Unexpected JSON type: " + json.getClass().getSimpleName());</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  }</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  private Author getOrCreate(final int id) {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    Author author = cache.get().get(id);</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    if (author == null) {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      author = new Author();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      author.setId(id);</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      cache.get().put(id, author);</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    }</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    return author;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  }</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">}</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">We made several changes in this class. Let us go through these changes one by one.</span></div><ol style="padding:0px;margin:0px 0px 10px 25px;"><li><div><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;">The authors are stored in the following object.
</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  private final ThreadLocal&lt;Map&lt;Integer, Author&gt;&gt; cache = new ThreadLocal&lt;Map&lt;Integer, Author&gt;&gt;() {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    @Override</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    protected Map&lt;Integer, Author&gt; initialValue() {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      return new HashMap&lt;&gt;();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    }</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  };</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><div><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">It uses a </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Map&lt;String, Object&gt;</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> as cache mechanism. The map is saved within a</span></div><div><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">
</span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">ThreadLocal</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> (</span><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/ThreadLocal.html" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 13px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; color: rgb(0, 136, 204); text-decoration: none;">JavaDoc</a><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">) instance to isolate state between the multiple threads. This class allows multiple threads to use the same variable without interfering with the other threads.</span></div></div><h4 style="margin: 10px 0px; text-rendering: optimizelegibility; font-size: 18px;"><span style="font-size: 18px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px; font-weight: bold;">Observation</span></h4><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">
Please note that while this approach is thread-safe, it may not fulfil the needs of specific application domain needs and thus one may have to use a different approach. Please refer to the articles: </span><a href="http://www.javacreed.com/how-to-cache-results-to-boost-performance/" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 13px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; color: rgb(0, 136, 204); text-decoration: none;">How to Cache Results to Boost Performance</a><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> and </span><a href="http://www.javacreed.com/caching-made-easy-with-spring/" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 13px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; color: rgb(0, 136, 204); text-decoration: none;">Caching Made Easy with Spring</a><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> for more caching examples.</span></div></li><li><div><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;">The authors are always retrieved using the following method.
</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  private Author getOrCreate(final int id) {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    Author author = cache.get().get(id);</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    if (author == null) {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      author = new Author();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      cache.get().put(id, author);</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    }</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    return author;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  }</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">This method first tries to obtain the authors instance from the cache. If no author is found with the given id, then one is created and added to the cache. </span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">This approach allows us to create the author with just its id, and then populate its contents later on when they become available. That is why the order of deserialisation does not affect the outcome. We can first deserialise the books and then the authors. In this case, first the authors are created with just their ids and the their names are added.</span></div></li><li><div><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;">The </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">deserialize()</span><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;"> was modified to handle the new requirements. Since many changes were applied, we will split this method further and describe each part separately.
</span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">The descerialiser can receive either a </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonPrimitive</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> or a </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonObject</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">. When the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">BookDeserialiser</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> executes the following code, the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonElement</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> passed to the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">AuthorDeserialiser</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> will be an instance of </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonPrimitive</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    </span><span style="margin-bottom: 30px; padding-bottom: 20px; border-bottom-width: 1px; border-bottom-style: dotted; border-bottom-color: rgb(233, 233, 233); font-size: 13px; color: rgb(63, 127, 95); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">// This is executed within the BookDeserialiser</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    Author[] authors = context.deserialize(jsonObject.get("authors"), Author[].class);</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">The following image shows this process.</span></div><div style="background-image: none; background-attachment: scroll; background-color: rgb(255, 255, 255); border: 1px solid rgb(240, 240, 240); max-width: 96%; padding: 10px 5px 5px; text-align: center; margin: 5px auto 20px; width: 877px; background-position: 0% 0%; background-repeat: repeat repeat;"><div><div><a href="http://www.javacreed.com/wp-content/uploads/2012/12/Delegating-Deserialisation-to-Context.png" rel="prettyphoto" title="Delegating Deserialisation to Context" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 12px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px; color: rgb(0, 136, 204); text-decoration: none;"><en-media hash="3c7272ae2830f6f1c078dc930587aa52" type="image/png" style="vertical-align:middle;height:auto;max-width:100%;border:0px none;margin:0px;padding:0px;width:auto;visibility:visible;opacity:1;" width="867" title="" /></a></div></div><div style="margin: 0px; font-size: 11px; padding: 5px 0px;"><span style="font-size: 11px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 17px; font-style: italic;">Delegating Deserialisation to Context</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">The </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">BookDeserialiser</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> delegates the deseialisation of the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Author</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">s array to the context, and provides an array of integers. For each integer, the context invokes the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">deserialize()</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> method of the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">AuthorDeserialiser</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> and pass the integer as a </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonPrimitive</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">.</span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">On the other hand, when the authors are deserialised, we will receive an instance of </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonObject</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> containing the author and his/her details. Therefore, before we convert the given </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonElement</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">, we need to determine whether it is of the correct type.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    </span><span style="font-size: 13px; color: rgb(63, 127, 95); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">// Only the ID is available</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    if (json.isJsonPrimitive()) {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      final JsonPrimitive primitive = json.getAsJsonPrimitive();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      final Author author = getOrCreate(primitive.getAsInt());</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      return author;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    } </span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">In the above example, only the id was available. The </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonElement</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> is converted into a </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonPrimitive</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> and then into an </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">int</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">. This </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">int</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> is used to retrieve the author from the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">getOrCreate()</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> method.</span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">The </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonElement</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> can be of type </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonObject</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> as shown next.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    </span><span style="font-size: 13px; color: rgb(63, 127, 95); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">// The whole object is available</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    if (json.isJsonObject()) {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      final JsonObject jsonObject = json.getAsJsonObject();</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      final Author author = getOrCreate(jsonObject.get("id").getAsInt());</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      author.setName(jsonObject.get("name").getAsString());</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      return author;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    }</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">In this case, the name is added to the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Author</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> instance returned by the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">getOrCreate()</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> method, before the author is returned.</span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">Finally, if the given </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonElement</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> instance is neither a </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonPrimitive</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> nor a </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonObject</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">, an exception is thrown to indicate that the given type is not supported.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    throw new JsonParseException("Unexpected JSON type: " + json.getClass().getSimpleName());</span></div></div></li></ol><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">The above captures all required changes to accommodate and address the new challenges. The </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">BookDeserialiser</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> and the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">main()</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> method do not require any changes. Running the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">main()</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> will produce the following.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">Output missing...</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">This example concludes our article about the Gson desieralizer. Using a custom deserializer is not difficult and enables us to work with different JSON representations with little effort. Note that the Java domain objects do not need to correspond to the JSON object being parsed. Furthermore, we can use existing Java objects with new JSON representations. Some problems may be more challenging than others to solve. Try to keep the changes to the existing code to a minimum and your design as flexible as required (not as possible).</span></div><div style="clear:both;margin:10px 0px;"><h2 style="margin: 10px 0px; text-rendering: optimizelegibility; font-size: 30px;"><br /></h2></div></div><div style="margin-top:30px;border-bottom:medium none;"><div><div style="margin:0px 0px 20px;"><div style="margin: 0px 0px 10px; direction: ltr; width: 100%; max-width: 100%; box-sizing: border-box;"><div></div></div><div style="margin: 0px 0px 10px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;"> 

</span></div></div></div></div></div></div></div></div></span></div></div><div><br /></div></en-note>