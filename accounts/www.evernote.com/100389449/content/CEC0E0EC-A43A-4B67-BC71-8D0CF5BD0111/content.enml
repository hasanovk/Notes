<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd"><en-note><div><span style="font-size: 24px; font-weight: bold;">Installing Pyramid on FreeBSD</span></div><div><br /></div><div># Website: <a href="https://trypyramid.com/">https://trypyramid.com/</a></div><div>=&gt;<span style="font-weight: bold;"> mkdir -p</span> <span style="color: rgb(148, 17, 0);">/opt/Projects/Pyramid</span> </div><div>=&gt; <span style="font-weight: bold;">cd</span> <span style="color: rgb(148, 17, 0);">/opt/Projects</span></div><div><span style="color: rgb(146, 146, 146);"># Setting up the virtual python environment</span></div><div>=&gt;<span style="font-weight: bold;"> python3 -m venv</span> <span style="color: rgb(148, 17, 0);"> Pyramid</span></div><div>=&gt; <span style="font-weight: bold;">cd</span> <span style="color: rgb(148, 17, 0);">Pyramid</span></div><div>=&gt; <span style="font-weight: bold;">bin/pip install </span><span style="color: rgb(4, 51, 255);">"pyramid==1.9.1</span>”</div><div><br /></div><div># We will be using the Template Jinja2, so lets install it as well.</div><div>=&gt;<span style="font-weight: bold;"> bin/pip instal</span>l<span style="color: rgb(148, 55, 255);"> Jinja2 </span> </div><div><br /></div><div><span style="font-size: 24px; font-weight: bold;">Creating First Pyramid Application</span></div><div>=&gt; <span style="font-weight: bold;">mkdir</span> <span style="color: rgb(148, 17, 0);">/opt/Projects/Pyramid/HelloWorld</span></div><div>=&gt;<span style="font-weight: bold;"> cd</span><span style="color: rgb(148, 17, 0); font-weight: bold;"> </span><span style="color: rgb(148, 17, 0);">/opt/Projects/Pyramid/HelloWorld</span></div><div><span style="color: rgb(146, 146, 146);"># Create the following file:</span></div><div><span style="color: rgb(146, 146, 146);"># Name</span>:<span style="color: rgb(148, 82, 0);"> helloworld.py</span></div><div><hr /><div><span style="color: rgb(255, 64, 255);">from</span> wsgiref.simple_server<span style="color: rgb(255, 64, 255);"> import </span>make_server</div></div><div><span style="color: rgb(255, 64, 255);">from</span> pyramid.config<span style="color: rgb(255, 64, 255);"> import</span> Configurator</div><div><span style="color: rgb(255, 64, 255);">from</span> pyramid.response<span style="color: rgb(255, 64, 255);"> import</span> Response</div><div><br /></div><div><br /></div><div><span style="color: rgb(146, 144, 0);">def</span><span style="color: rgb(0, 150, 255);"> hello_world</span>(request):</div><div>   <span style="color: rgb(148, 33, 147);"> </span><span style="color: rgb(148, 55, 255);">return</span> Response('<span style="color: rgb(148, 17, 0);">Hello %(name)s!</span>' % request.matchdict)</div><div><br /></div><div><span style="color: rgb(146, 144, 0);">if </span><span style="font-weight: bold;">__name__ == '__main__'</span>:</div><div>    <span style="color: rgb(146, 144, 0);">with</span> <span style="color: rgb(4, 51, 255);">Configurator()</span> <span style="color: rgb(146, 144, 0);">as</span> <span style="color: rgb(4, 51, 255);">config</span>:</div><div>       <span style="color: rgb(4, 51, 255);"> config</span>.<span style="font-weight: bold;">add_route</span>('<span style="color: rgb(0, 145, 147);">hello</span>', '<span style="color: rgb(148, 17, 0);">/hello/</span>{name}')</div><div>       <span style="color: rgb(4, 51, 255);"> config</span>.<span style="font-weight: bold;">add_view</span>(<span style="color: rgb(0, 150, 255);">hello_world</span>, route_name='<span style="color: rgb(0, 145, 147);">hello</span>')</div><div>        <span style="color: rgb(255, 64, 255);">app</span> = <span style="color: rgb(4, 51, 255);">config</span>.<span style="font-weight: bold;">make_wsgi_app()</span></div><div>   <span style="font-weight: bold;"> server </span>=<span style="font-weight: bold;"> make_server</span>('192.168.100.150', 8585, <span style="color: rgb(255, 64, 255);">app</span>)</div><div><br /></div><div>    server.serve_forever()</div><div><hr /><div>=&gt;<span style="font-weight: bold;"> ../bin/python</span> <span style="color: rgb(148, 82, 0);">helloworld.py </span><span style="font-weight: bold;"> &amp;</span></div></div><div>=&gt; sockstat -4 | grep 8585</div><div><span style="color: rgb(146, 146, 146);">khasanov python3.6  1211  4  tcp4   192.168.100.150:8585  *:*</span></div><div><br /></div><div><span style="color: rgb(146, 146, 146);"># Now visit http://192.168.100.150:8585/hello/hello</span></div><div><span style="color: rgb(146, 146, 146);"># You should see “Hello hello!”</span></div><div><br /></div><div><span style="font-size: 24px; font-weight: bold;">Creating a Pyramid Project Using the Cookiecutters</span></div><div><br /></div><div><hr /><div><br /></div></div><div><span style="font-weight: bold;"><font face="Helvetica Neue" style="font-size: 20px;">New Method using the Cookiecutters</font> (<span style="font-weight: bold;"><font style="color: rgb(0, 150, 255);">pyramid-cookiecutter-alchemy</font>)</span></span></div><div># As we saw in <a href="https://docs.pylonsproject.org/projects/pyramid/en/latest/narr/firstapp.html#firstapp-chapter">Creating First Pyramid Application</a>, it's possible to create a Pyramid application completely manually. However, it's usually more convenient to use a <a href="https://docs.pylonsproject.org/projects/pyramid/en/latest/glossary.html#term-cookiecutter">cookiecutter</a> to generate a basic Pyramid <a href="https://docs.pylonsproject.org/projects/pyramid/en/latest/glossary.html#term-project">project</a>.</div><div># First we want to install the cookiecutter from here</div><div># <a href="https://cookiecutter.readthedocs.io/en/latest/installation.html">https://cookiecutter.readthedocs.io/en/latest/installation.html</a></div><div><br /></div><div>=&gt; <b>pip3 install </b>-<font color="#945200">-user</font> <font color="#0433ff">cookiecutter</font></div><div><font color="#929292">=&gt; pip2 install --user cookiecutter</font></div><div><br /></div><div># Note: Regardless of which PIP you use, its going to install the “cookiecutter” under</div><div># <font color="#941100">$HOME/.local/bin</font></div><div># You should set the <b>$PATH</b> to find it in your “.<b>bashrc</b>”</div><div>=&gt; <b>cd</b> <span style="color: rgb(148, 17, 0);">/opt/Projects/Pyramid</span> </div><div># We will be using the <span style="font-weight: bold; color: rgb(0, 150, 255);">pyramid-cookiecutter-alchemy</span></div><div>=&gt;<b> cookiecutter</b> <b>gh:Pylons</b>/<font color="#0096ff">pyramid-cookiecutter-alchemy </font>--checkout master</div><div>roject_name [Pyramid Scaffold]: KFH_Alchemy &lt;Enter&gt;</div><div>repo_name [kfh_alchemy]:</div><div><br /></div><div>=&gt; cd kfh_alchemy</div><div>=&gt; ../bin/pip install --upgrade pip setuptools</div><div><br /></div><div><b><font face="Helvetica Neue" style="font-size: 20px;">Installing the Project</font></b></div><div><br /></div><div>=&gt; <span style="font-weight: bold;">cd</span> <span style="color: rgb(148, 17, 0);">/opt/Projects/Pyramid/kfh_alchemy</span></div><div>=&gt; <font color="#941100">../bin</font>/<b>pip install -e .</b> </div><div><br /></div><div><b><font face="Helvetica Neue" style="font-size: 20px;">Running the Test for the Project</font></b> </div><div><br /></div><div># There was no py-sqlite3 module in FreeBSD</div><div># /usr/ports/databases/py-sqlite3 # make DEFAULT_VERSIONS=python=3.6 install </div><div><br /></div><div> in editable mode with its testing requirements.</div><div> =&gt;<font color="#941100"> ../bin</font>/<b>pip install -e</b> <font color="#ff40ff">".[testing]"</font></div><div><br /></div><div>Run the Test:</div><div>=&gt; ../bin/py.test -q</div><div><font color="#929292"># The same thing with “pytest”</font></div><div><font color="#929292"><br /></font></div><div><font color="#929292"># Configure the database:</font></div><div> =&gt; ../bin/initialize_kfh_alchemy_db development.ini</div><div><br /></div><div><font color="#929292"># Run your project.<br /></font></div><div><font color="#929292"># First edit the “development.ini” and set the host</font></div><div><font color="#009051">[servermain]</font></div><div><b>use</b> = egg:waitress#main</div><div><font color="#929292">#isten = localhost:6543</font></div><div><b>listen</b> = 192.168.100.150:8585</div><div> </div><div>=&gt; <font color="#941100">../bin</font>/<b>pserve </b><font color="#0433ff">development.ini</font></div><div> </div></en-note>