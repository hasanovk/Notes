<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">
<en-note><div><span style="color: rgb(145, 145, 145);"># Written by KFH: </span><a style="color: rgb(145, 145, 145);" href="mailto:karshi.hasanov@utoronto.ca">karshi.hasanov@utoronto.ca</a></div><div><span style="color: rgb(145, 145, 145);"># Date: May 10, 2010</span></div><div><span style="color: rgb(145, 145, 145);"># Last Modified: August 6, 2017</span></div><div><span style="color: rgb(145, 145, 145);"># Description: Installing the OpenSSL server and generating the CA’s</span></div><div><br/></div><div><span style="font-weight: bold; font-size: 24px;">Installing the OpenSSL Server:</span></div><div><br/></div><div>=&gt;<span style="font-weight: bold;"> sudo</span> <span style="color: rgb(4, 51, 255);">portsnap fetch update</span></div><div># We want to install the OpenSSL Server under the “/usr/local/openssl” folder.</div><div># Edit the “/etc/make.conf” file and add NO_OPENSSL = yes</div><div>=&gt; <span style="font-weight: bold;">sudo vi</span> /etc/make.conf   # Add this : <font color="#009051">NO_OPENSSL = yes </font></div><div>     and this <font color="#009051">DEFAULT_VERSIONS+=ssl=openssl</font></div><div><br/></div><div># The port location</div><div>=&gt; <span style="font-weight: bold;">cd </span>/usr/ports/security/openssl</div><div><br/></div><div><span style="color: rgb(121, 121, 121);"># Override the default OpenSSL install</span></div><div>=&gt;<span style="font-weight: bold;"> sudo make</span> <span style="color: rgb(148, 17, 0);">-D OPENSSL_OVERWRITE_BASE</span> <span style="font-weight: bold;">install clean</span></div><div><span style="color: rgb(121, 121, 121);"># This will install the OpenSSL under &quot;/usr/local/openssl&quot;</span></div><div><br/></div><div># Remove 'old' binary : </div><div>=&gt; <span style="font-weight: bold;">sudo</span> <span style="font-weight: bold;">mv</span> <span style="color: rgb(148, 17, 0);">/usr/bin/</span><span style="color: rgb(255, 64, 255);">openssl</span> <span style="color: rgb(148, 17, 0);">/usr/bin/</span><span style="color: rgb(148, 55, 255);">openssl_orig</span></div><div># Make the links to new location:   </div><div>=&gt; <span style="font-weight: bold;">sudo ln -s</span><span style="color: rgb(148, 17, 0);"> /usr/local/bin/</span><span style="color: rgb(255, 64, 255);">openssl</span> <span style="color: rgb(148, 17, 0);">/usr/bin/</span><span style="color: rgb(255, 64, 255);">openssl</span></div><div>=&gt; <span style="font-weight: bold;">sudo ln -s</span> <span style="color: rgb(148, 17, 0);">/usr/local/openssl/</span><span style="color: rgb(255, 64, 255);">openssl.cnf</span><span style="color: rgb(148, 17, 0);"> /etc/ssl/</span><span style="color: rgb(255, 64, 255);">openssl.cnf</span></div><div><br/></div><div><span style="font-weight: bold; font-size: 24px;"> Creating a SSL Certificate of Authority (CA)</span></div><div><br/></div><div>  <span style="color: rgb(94, 94, 94);">  </span><span style="color: rgb(94, 94, 94);">If you want to use a SSL certificate for things such as Apache (HTTPS) you have two choices:</span></div><ol start="1"><li><span style="color: rgb(94, 94, 94);">You can ask  from a trusted CA such as Thwate or Verisign to help you.</span></li><li><span style="color: rgb(94, 94, 94);">You can generate one yourself using OpenSSL. To do that you need to setup your CA on your server.</span></li></ol><div>   Usually a CA company only signs your certficate. So, you still need to create one for your server and then send (request) the CA</div><div>   company to sign it ( probably they will ask to pay for it). Later we will show how to create a certificate for a server.</div><div><span style="text-decoration: underline;"> </span></div><div>           </div><div><span style="color: rgb(121, 121, 121);"># Setting up the working directory:</span></div><div>=&gt;<span style="font-weight: bold;"> sudo mkdir -p</span> <span style="color: rgb(148, 17, 0);">/etc/kfh-certs/ca/</span>{<span style="color: rgb(1, 25, 147);">private,certs,newcrts</span>}</div><div><span style="color: rgb(1, 25, 147);">private </span>- contains the private key</div><div><span style="color: rgb(1, 25, 147);">certs </span>- contains CA certificate, certificates database, generated certificates, keys, and requests</div><div><span style="color: rgb(1, 25, 147);">newcerts</span> - contains copies of each signed certificate</div><div><br/></div><div>=&gt; sudo touch <span style="color: rgb(148, 17, 0);">/etc/kfh-certs/ca/</span>index.txt</div><div>=&gt; sudo touch <span style="color: rgb(148, 17, 0);">/etc/kfh-certs/ca/</span>serial </div><div><span style="color: rgb(121, 121, 121);"># Edit the “serial” file and insert “1001” ( or any number which is &gt; 1 will be your first certifcate number)</span></div><div><span style="color: rgb(121, 121, 121);"># Since the numbers are HEX , 0x1 won’t work!</span></div><div><br/></div><div><br/></div><div><span style="color: rgb(121, 121, 121);"># Editing the “openssl.cnf”:</span></div><div><span style="color: rgb(121, 121, 121);"># </span><span style="color: rgb(94, 94, 94);">Before generating your OpenSSL CA you should edit your openssl.cnf file to save yourself time. </span></div><div><span style="color: rgb(94, 94, 94);"># This file is used everytime you use OpenSSL and it stores the defaults for many of the things that you are prompted</span></div><div><span style="color: rgb(94, 94, 94);"># for  everytime. </span></div><div>=&gt;<span style="font-weight: bold;"> sudo vim</span> <span style="color: rgb(148, 17, 0);">/usr/local/openssl/</span><span style="color: rgb(0, 144, 81);">openssl.cnf</span></div><div># —————————— “openssl.conf” file  ————————————</div><div><br/></div><div><span style="font-weight: bold;">[ CA_default ]</span></div><div>            <span style="color: rgb(148, 17, 0);">dir </span>= <span style="color: rgb(148, 17, 0);">/etc/kfh-certs/ca</span></div><div>           <span style="color: rgb(146, 146, 146);"># Where everything is kept</span></div><div>                </div><div>          <span style="color: rgb(4, 51, 255);">private_key</span>    = <span style="color: rgb(148, 17, 0); font-weight: bold;">$dir/private</span><span style="color: rgb(148, 17, 0);">/</span><span style="color: rgb(4, 51, 255);">kfh-private-key.pem</span></div><div><br/></div><div>          <span style="color: rgb(0, 144, 81);"> default_days</span>  = <span style="color: rgb(0, 144, 81);">1825</span></div><div>           <span style="color: rgb(146, 146, 146);"># Valid for 5 years </span></div><div> <span style="font-weight: bold;">[ req ]</span></div><div>              </div><div>           <span style="color: rgb(148, 55, 255);">default_bits </span>= <span style="color: rgb(148, 55, 255);">2048</span></div><div>           <span style="color: rgb(148, 55, 255);">default_keyfile = kfh_privkey.pem</span></div><div>          <span style="color: rgb(145, 145, 145);"> # Note: This file will be created when the CA Certificate and Keys created</span></div><div><span style="color: rgb(145, 145, 145);">           # and late will be moved (or renamed)  by me to the   </span><span style="color: rgb(145, 145, 145); font-weight: bold;">$dir/private</span><span style="color: rgb(145, 145, 145);">/kfh-private-key.pem</span></div><div> <span style="font-weight: bold;">[ req_distinguished_name ]</span>            </div><div>             </div><div>           <span style="color: rgb(146, 144, 0);">countryName_default</span><span style="color: rgb(146, 144, 0);"> </span>= <span style="color: rgb(146, 144, 0);">CA </span></div><div>         <span style="color: rgb(145, 145, 145);"> # CA: Canada </span></div><div>                </div><div>          <span style="color: rgb(146, 144, 0);">stateOrProvinceName_default</span> = <span style="color: rgb(146, 144, 0);">Ontario</span></div><div>        <span style="color: rgb(145, 145, 145);"> # Ontario ,Some-State </span></div><div>                </div><div>         <span style="color: rgb(146, 144, 0);"> localityName_default</span> =<span style="color: rgb(146, 144, 0);"> Toronto</span></div><div><br/></div><div>         <span style="color: rgb(146, 144, 0);"> 0.organizationName_default </span>=<span style="color: rgb(146, 144, 0);"> KFH Inc.</span></div><div>        <span style="color: rgb(145, 145, 145);"> #Company Name</span></div><div>                </div><div>         <span style="color: rgb(146, 144, 0);">organizationalUnitName_default </span><span style="color: rgb(146, 144, 0);"> </span>= <span style="color: rgb(146, 144, 0);">Information Technology Department</span></div><div><span style="color: rgb(146, 144, 0);">         commonName  = info.karshi.ca</span></div><div>         <span style="color: rgb(146, 144, 0);">emailAddress_default </span>= <a href="mailto:karshi.hasanov@icloud.ca">karshi.hasanov@</a>gmail.com</div><div><br/></div><div># —————————— “End  ————————————</div><div><br/></div><div><span style="color: rgb(145, 145, 145);"># Note: This is the Certificate of Authority Keys!  </span>          </div><div><span style="font-weight: bold; font-size: 24px;">Generating  the CA Certificate and Key</span></div><div> </div><div>        =&gt; <span style="font-weight: bold;">cd </span>/etc/kfh-certs/ca</div><div>        =&gt; <span style="font-weight: bold;">sudo  </span><span style="color: rgb(255, 38, 0);">openssl</span> <span style="font-weight: bold;">req</span> <span style="font-weight: bold;">-x509</span>  <span style="font-weight: bold;">-newkey</span><span style="color: rgb(148, 17, 0);"> rsa:2048</span> <span style="font-weight: bold;">-out</span> <span style="color: rgb(4, 51, 255);">kfh_cacert.pem</span> -<span style="font-weight: bold;">outform</span> <span style="color: rgb(148, 17, 0);">PEM    </span>         </div><div>             <span style="color: rgb(145, 145, 145);"># This will create &quot;kfh_cacert.pem &quot; and “kfh_privkey.pem&quot;</span></div><div> </div><div><span style="color: rgb(145, 145, 145);">             # Remember &quot;</span><span style="color: rgb(145, 145, 145); font-weight: bold;">passphrase</span><span style="color: rgb(145, 145, 145);">” -&gt; H***3</span></div><div>             =&gt; <span style="font-weight: bold;">sudo mv</span> <span style="color: rgb(4, 51, 255);">kfh_privkey.pem</span> <span style="color: rgb(148, 17, 0);">/etc/kfh-certs/ca/</span><span style="font-weight: bold; color: rgb(148, 17, 0);">private</span><span style="font-weight: bold;">/</span><span style="color: rgb(4, 51, 255);">kfh-private-key.pem</span></div><div><br/></div><div><br/></div><div>             <span style="font-weight: bold; text-decoration: underline;">Optional:</span> Strip the certificate from all its text to keep only the -CERTIFICATE- section to create a crt file</div><div>             =&gt; <span style="font-weight: bold;">sudo</span> <span style="color: rgb(255, 38, 0);">openssl</span> <span style="font-weight: bold;">x509</span> <span style="color: rgb(4, 51, 255);">-in</span> <span style="color: rgb(4, 51, 255);">kfh_cacert.pem</span> <span style="color: rgb(0, 144, 81);">-out</span> <span style="color: rgb(0, 145, 147);">kfh_cacert.crt</span></div><div><br/></div><div>             <span style="color: rgb(145, 145, 145);"># We  have just configured the Certificate Authority:</span></div><div>             CA Private Key : <span style="color: rgb(148, 17, 0);">/etc/kfh-certs/ca/</span><span style="font-weight: bold; color: rgb(148, 17, 0);">private</span><span style="font-weight: bold;">/</span><span style="color: rgb(4, 51, 255);">kfh-private-key.pem</span></div><div><span style="color: rgb(4, 51, 255);">             </span>CA Certificate : <span style="color: rgb(148, 17, 0);">/etc/kfh-certs/ca/ </span><span style="color: rgb(4, 51, 255);">kfh_cacert.pem</span></div><div><span style="color: rgb(4, 51, 255);">             </span>CA Certificate <span style="color: rgb(4, 51, 255);">: </span><span style="color: rgb(148, 17, 0);">/etc/kfh-certs/ca/ </span><span style="color: rgb(0, 143, 0);">kfh_cacert.crt  ( no text )</span></div><div>      </div><div><br/></div><div><br/></div><div><span style="font-size: 24px;"> </span><span style="font-size: 24px; font-weight: bold;">Creating a  Server Specific Certificate</span> </div><div>             </div><div>    #     Although this example done for this server (freebsd.karshi.ca), any server any where who needs a SSL Certificate </div><div>    #  can  do the same. </div><div>    #  If you need to create a SSL Certificate, you don’t need to edit the “openssl.cnf” file on your server. What we are trying</div><div>    #  to do here is to create the SSL Certificate which need to be signed by CA company. In my case, I already setup my own</div><div>    #  CA (self-signed). So, later I will ask my server to sign the Certificate I am about to create now:</div><div>    </div><div>    # Note: You can create the certificate anywhere on your server you like. To keep things organize, I want to keep my certificate</div><div>    # under “/etc/kfh-certs/ca/certs”. </div><div>             =&gt; <span style="font-weight: bold;">sudo</span> <span style="font-weight: bold;">mkdir </span><span style="color: rgb(148, 17, 0);">/etc/kfh-certs/ca/certs/freebsd-srv</span></div><div>              =&gt; <span style="font-weight: bold;">cd  </span><span style="font-weight: bold; color: rgb(148, 17, 0);">/etc/kfh-certs/ca/certs/freebsd-srv</span></div><div>             =&gt; <span style="font-weight: bold;">sudo </span><span style="color: rgb(255, 38, 0);">openssl</span> <span style="color: rgb(148, 17, 0);">req </span><span style="font-weight: bold;">-newkey</span> <span style="color: rgb(148, 17, 0);">rsa:2048 </span> <span style="font-weight: bold;">-keyout</span> <span style="color: rgb(4, 51, 255);">freebsd_enckey.pem</span> <span style="font-weight: bold;">-keyform</span> PEM <span style="font-weight: bold;">-out </span> <span style="color: rgb(0, 143, 0);">freebsd_req.pem</span> <span style="font-weight: bold;">-outform</span> PEM</div><div>            <span style="color: rgb(145, 145, 145);"># You need to provide your server specific, C (Country), ST (State or Provience) , O (Organization) and</span></div><div><span style="color: rgb(145, 145, 145);">            # CN ( CommonName = Full Qualified Server Name )</span></div><div>            <span style="color: rgb(255, 38, 0);"># Important : The CommonName (CN) must match with your server’s hostname !!!</span></div><div>              <span style="color: rgb(145, 145, 145);"># Remember your &quot;PEM&quot; pass phrase : *** Old_BASE</span></div><div><span style="color: rgb(145, 145, 145);">             #  A challenge password: ***Old_BASE</span></div><div><br/></div><div>             <span style="color: rgb(145, 145, 145);">This will create  </span><span style="color: rgb(4, 51, 255);"> freebsd_enckey.pem</span><span style="color: rgb(145, 145, 145);"> and </span><span style="color: rgb(0, 144, 81);"> freebsd_req.pem</span> <span style="color: rgb(145, 145, 145);">.</span></div><div><br/></div><div><span style="color: rgb(145, 145, 145);">            # IMPORTANT: For some servers such as Apache, you might want to remove the passphrase.</span></div><div><span style="color: rgb(145, 145, 145);">            # Otherewise, everytime when the server rebooted it will ask the passphrase to be eneter and you don’t</span></div><div><span style="color: rgb(145, 145, 145);">            # want that.</span></div><div><span style="color: rgb(145, 145, 145);">            # To remove the passphrase you need to use “su” ( sudo won’t work):</span></div><div>            </div><div>            <span style="font-weight: bold;">[as root]</span> =&gt;<span style="font-weight: bold; color: rgb(255, 38, 0);">openssl </span><span style="font-weight: bold;">rsa</span> <span style="font-weight: bold; color: rgb(4, 51, 255);">&lt;</span><span style="font-weight: bold;"> </span><span style="font-weight: bold;"> </span><span style="font-weight: bold; color: rgb(4, 51, 255);">freebsd_enckey.pem </span><span style="font-weight: bold; color: rgb(4, 51, 255);"> </span><span style="color: rgb(0, 145, 147); font-weight: bold;">&gt; </span><span style="color: rgb(0, 145, 147); font-weight: bold;">freebsd_key.pem</span></div><div>           <span style="color: rgb(145, 145, 145);"> # It will ask to enter your PEM pass phrase here </span></div><div>             </div><div><br/></div><div>             <span style="font-style: italic;">Now the Server's Certificate is ready to request to be signed and we need to ask some CA to sign it.</span></div><div><span style="font-style: italic;">             For this example, we will be using our CA ( self-signed) to sign it.</span></div><div><br/></div><div>   <span style="font-weight: bold; font-size: 24px;">Ask the Certificate Authority to sign the Server's Certificate:</span></div><div>             </div><div>            <span style="color: rgb(121, 121, 121);"># Now we need to send our “freebsd_req.pem” to some CA company who are authorized to sign it. </span></div><div><span style="color: rgb(121, 121, 121);">            # By “authorized” I mean, those companies who are well known by the web browsers such as Firefox, Safari and Chrome.</span></div><div><span style="color: rgb(121, 121, 121);">    </span><span style="color: rgb(121, 121, 121);">    </span><span style="color: rgb(121, 121, 121);">    # The client browsers will have in thier database the signatures of those companies. So, a client who is visiting to your HTTPS website will not</span></div><div><span style="color: rgb(121, 121, 121);">    </span><span style="color: rgb(121, 121, 121);">    </span><span style="color: rgb(121, 121, 121);">    # be ask to accept your certificate.</span></div><div><span style="color: rgb(121, 121, 121);">    </span><span style="color: rgb(121, 121, 121);">    </span><span style="color: rgb(121, 121, 121);">    # In my case, I send my certificate no where. I ask my server to sign it. I don’t care if people want to accept my crtificate or not.</span></div><div><br/></div><div>             =&gt; <span style="font-weight: bold;">cd </span><span style="color: rgb(148, 17, 0);">/etc/kfh-certs/ca/certs/freebsd-srv</span></div><div>             =&gt;<span style="font-weight: bold;"> sudo  </span>openssl ca <span style="color: rgb(4, 51, 255); font-weight: bold;">-in</span><span style="color: rgb(4, 51, 255);"> freebsd_req.pem</span> <span style="color: rgb(0, 145, 147); font-weight: bold;">-out</span><span style="color: rgb(0, 145, 147);"> freebsd.crt</span></div><div><br/></div><div>             Since I don’t need the<span style="font-weight: bold;"> freebsd_enckey.pem</span> and <span style="font-weight: bold;"> freebsd_req.pem</span>, usually I delete them</div><div>             (  it might confuse me when I need to make a link to my certificate and key)</div><div>            =&gt;<span style="font-weight: bold;"> sudo rm -rf </span> freebsd_enckey.pem </div><div>           =&gt; <span style="font-weight: bold;">sudo rm -rf </span> freebsd_req.pem </div><div>             </div><div>          <span style="color: rgb(148, 17, 0);"> [khasanov@freebsd /freebsd-srv]$</span> <span style="font-weight: bold;">ls</span></div><div>          <span style="color: rgb(1, 25, 147);"> freebsd.crt </span>    <span style="color: rgb(0, 145, 147);">freebsd_key.pem</span></div><div>That’s it !!!</div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div></en-note>
