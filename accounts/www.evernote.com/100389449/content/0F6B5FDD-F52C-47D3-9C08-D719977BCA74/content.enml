<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd"><en-note><div><span style="font-size: 24px; font-weight: bold;">Installing Pyramid on FreeBSD</span></div><div><br /></div><div><span style="color: rgb(146, 146, 146);">#: Written by KFH: </span><a href="mailto:karshi.hasanov@utoronto.ca">karshi.hasanov@utoronto.ca</a></div><div><span style="color: rgb(146, 146, 146);">#: Date: June 20, 2017</span></div><div><span style="color: rgb(146, 146, 146);">#: Description: The Python Pyramid Framework Installation</span></div><div><span style="color: rgb(146, 146, 146);">#: Last Modified: 27, 2018</span></div><div><span style="color: rgb(146, 146, 146);"># - Updated and tested again</span></div><div><br /></div><div># Websites: </div><div>    <a href="https://trypyramid.com/">https://trypyramid.com/</a>    (Pyramid)</div><div>    <a href="https://pylonsproject.org/">https://pylonsproject.org/</a> (Pylons Project)</div><div><br /></div><div>=&gt;<span style="font-weight: bold;"> mkdir -p</span> <span style="color: rgb(148, 17, 0);">/opt/Projects/Pyramid</span> </div><div>=&gt; <span style="font-weight: bold;">cd</span> <span style="color: rgb(148, 17, 0);">/opt/Projects</span></div><div><span style="color: rgb(146, 146, 146);"># Setting up the virtual python environment</span></div><div>=&gt;<span style="font-weight: bold;"> python3 -m venv</span> <span style="color: rgb(148, 17, 0);"> Pyramid</span></div><div>=&gt; <span style="font-weight: bold;">cd</span> <span style="color: rgb(148, 17, 0);">Pyramid</span></div><div>=&gt; <span style="font-weight: bold;">bin/pip install </span><span style="color: rgb(4, 51, 255);">"pyramid==1.9.2</span>”</div><div><br /></div><div># We will be using the Template Jinja2, so lets install it as well.</div><div>=&gt;<span style="font-weight: bold;"> bin/pip instal</span>l<span style="color: rgb(148, 55, 255);"> Jinja2 </span> </div><div><br /></div><div><span style="font-size: 24px; font-weight: bold;">Creating First Pyramid Application</span></div><div>=&gt; <span style="font-weight: bold;">mkdir</span> <span style="color: rgb(148, 17, 0);">/opt/Projects/Pyramid/HelloWorld</span></div><div>=&gt;<span style="font-weight: bold;"> cd</span><span style="color: rgb(148, 17, 0); font-weight: bold;"> </span><span style="color: rgb(148, 17, 0);">/opt/Projects/Pyramid/HelloWorld</span></div><div><span style="color: rgb(146, 146, 146);"># Create the following file:</span></div><div><span style="color: rgb(146, 146, 146);"># Name</span>:<span style="color: rgb(148, 82, 0);"> helloworld.py</span></div><div><hr /><div><span style="color: rgb(255, 64, 255);">from</span> wsgiref.simple_server<span style="color: rgb(255, 64, 255);"> import </span>make_server</div></div><div><span style="color: rgb(255, 64, 255);">from</span> pyramid.config<span style="color: rgb(255, 64, 255);"> import</span> Configurator</div><div><span style="color: rgb(255, 64, 255);">from</span> pyramid.response<span style="color: rgb(255, 64, 255);"> import</span> Response</div><div><br /></div><div><br /></div><div><span style="color: rgb(146, 144, 0);">def</span><span style="color: rgb(0, 150, 255);"> hello_world</span>(request):</div><div>   <span style="color: rgb(148, 33, 147);"> </span><span style="color: rgb(148, 55, 255);">return</span> Response('<span style="color: rgb(148, 17, 0);">Hello %(name)s!</span>' % request.matchdict)</div><div><br /></div><div><span style="color: rgb(146, 144, 0);">if </span><span style="font-weight: bold;">__name__ == '__main__'</span>:</div><div>    <span style="color: rgb(146, 144, 0);">with</span> <span style="color: rgb(4, 51, 255);">Configurator()</span> <span style="color: rgb(146, 144, 0);">as</span> <span style="color: rgb(4, 51, 255);">config</span>:</div><div>       <span style="color: rgb(4, 51, 255);"> config</span>.<span style="font-weight: bold;">add_route</span>('<span style="color: rgb(0, 145, 147);">hello</span>', '<span style="color: rgb(148, 17, 0);">/hello/</span>{name}')</div><div>       <span style="color: rgb(4, 51, 255);"> config</span>.<span style="font-weight: bold;">add_view</span>(<span style="color: rgb(0, 150, 255);">hello_world</span>, route_name='<span style="color: rgb(0, 145, 147);">hello</span>')</div><div>        <span style="color: rgb(255, 64, 255);">app</span> = <span style="color: rgb(4, 51, 255);">config</span>.<span style="font-weight: bold;">make_wsgi_app()</span></div><div>   <span style="font-weight: bold;"> server </span>=<span style="font-weight: bold;"> make_server</span>('192.168.100.250', 8585, <span style="color: rgb(255, 64, 255);">app</span>)</div><div><br /></div><div>    server.serve_forever()</div><div><hr /><div>=&gt;<span style="font-weight: bold;"> ../bin/python</span> <span style="color: rgb(148, 82, 0);">helloworld.py </span><span style="font-weight: bold;"> &amp;</span></div></div><div>=&gt; sockstat -4 | grep 8585</div><div><span style="color: rgb(146, 146, 146);">khasanov python3.6  1211  4  tcp4   192.168.100.150:8585  *:*</span></div><div><br /></div><div><span style="color: rgb(146, 146, 146);"># Now visit http://192.168.100.150:8585/hello/hello</span></div><div><span style="color: rgb(146, 146, 146);"># You should see “Hello hello!”</span></div><div><br /></div><div><span style="font-size: 24px; font-weight: bold;">Creating a Pyramid Project Using the Cookiecutters</span></div><div><br /></div><div><hr /><div><br /></div></div><div><span style="font-weight: bold;"><span style="font-size: 20px; font-weight: bold; font-family: 'Helvetica Neue';">New Method using the Cookiecutters</span> </span></div><div># As we saw in <a href="https://docs.pylonsproject.org/projects/pyramid/en/latest/narr/firstapp.html#firstapp-chapter">Creating First Pyramid Application</a>, it's possible to create a Pyramid application completely manually. However, it's usually more convenient to use a <a href="https://docs.pylonsproject.org/projects/pyramid/en/latest/glossary.html#term-cookiecutter">cookiecutter</a> to generate a basic Pyramid <a href="https://docs.pylonsproject.org/projects/pyramid/en/latest/glossary.html#term-project">project</a>.</div><div># First we want to install the cookiecutter from here</div><div># <a href="https://cookiecutter.readthedocs.io/en/latest/installation.html">https://cookiecutter.readthedocs.io/en/latest/installation.html</a></div><div><br /></div><div>=&gt; <span style="font-weight: bold;">pip3 install </span>-<span style="color: rgb(148, 82, 0);">-user</span> <span style="color: rgb(4, 51, 255);">cookiecutter</span></div><div><span style="color: rgb(146, 146, 146);">=&gt; pip2 install --user cookiecutter</span></div><div><br /></div><div># Note: Regardless of which PIP you use, its going to install the “cookiecutter” under</div><div># <span style="color: rgb(148, 17, 0);">$HOME/.local/bin</span></div><div># You should set the <span style="font-weight: bold;">$PATH</span> to find it in your “.<span style="font-weight: bold;">bashrc</span>”</div><div>=&gt; <span style="font-weight: bold;">cd</span> <span style="color: rgb(148, 17, 0);">/opt/projects/pyramid</span> </div><div><br /></div><div><span style="font-size: 24px; font-weight: bold;">Pyramid Cookiecutters</span></div><ul><li><div><a href="https://github.com/Pylons/pyramid-cookiecutter-starter">pyramid-cookiecutter-starter</a></div></li><li><div><a href="https://github.com/Pylons/pyramid-cookiecutter-alchemy">pyramid-cookiecutter-alchemy</a></div></li><li><div><a href="https://github.com/Pylons/pyramid-cookiecutter-zodb">pyramid-cookiecutter-zodb</a></div></li></ul><div><br /></div><div><span style="color: rgb(146, 146, 146);"># Generate a Pyramid project, following the prompts from the command:</span></div><div>=&gt;<span style="font-weight: bold;"> cookiecutter</span> <span style="color: rgb(148, 55, 255); font-weight: bold;">gh:Pylons</span>/<span style="color: rgb(0, 143, 0);">pyramid-cookiecutter-alchemy </span></div><div><span style="color: rgb(146, 146, 146);">roject_name [Pyramid Scaffold]:</span><span style="color: rgb(146, 146, 146); font-weight: bold;"> </span><span style="color: rgb(0, 145, 147); font-weight: bold;">kfh-alchemy</span><span style="color: rgb(146, 146, 146);"> </span><span style="color: rgb(146, 146, 146);"> &lt;Enter&gt;</span></div><div><span style="color: rgb(146, 146, 146);">repo_name [</span><span style="color: rgb(146, 146, 146);">kfh_pyramid</span><span style="color: rgb(146, 146, 146);">]: &lt;Enter&gt;</span></div><div><br /></div><div><span style="color: rgb(146, 146, 146);"># Change directory into your newly created project.</span></div><div>=&gt;<span style="font-weight: bold;"> cd</span> <span style="color: rgb(0, 145, 147); font-weight: bold;">kfh-alchemy</span></div><div><br /></div><div><span style="color: rgb(146, 146, 146);"># Create a Python virtual environment: ( Note: My python3 —&gt; python3.6 )</span></div><div>=&gt;<span style="font-weight: bold;"> python3</span> <span style="color: rgb(146, 144, 0);">-m</span> <span style="color: rgb(146, 144, 0);">venv</span><span style="color: rgb(148, 17, 0);"> env   </span># ( “<span style="color: rgb(146, 144, 0);">venv</span>” is the module and “<span style="color: rgb(148, 17, 0);">env</span>” is the folder )</div><div><br /></div><div><span style="color: rgb(146, 146, 146);"># Upgrade packaging tools : “pip” , “pip3” and “pip3.6” are the same commands in this folder</span></div><div>=&gt; <span style="color: rgb(148, 17, 0);">env/bin</span>/<span style="font-weight: bold;">pip</span> <span style="font-weight: bold;">install</span> <span style="color: rgb(0, 84, 147); font-weight: bold;">--upgrade</span><span style="font-weight: bold;"> pip</span><span style="color: rgb(0, 150, 255);"> setuptools</span></div><div><br /></div><div><span style="color: rgb(146, 146, 146);"># Install the project in editable mode with its testing requirements:</span></div><div>=&gt;<span style="color: rgb(148, 17, 0);"> env/bin/</span><span style="font-weight: bold;">pip install</span> -e ".[<span style="color: rgb(148, 33, 147);">testing</span>]”</div><div><br /></div><div><span style="color: rgb(146, 146, 146);"># FreeBSD: You will neet the “py-sqlite3” if noy installed</span></div><div>=&gt;<span style="font-weight: bold;"> cd</span> <span style="color: rgb(148, 17, 0);"> /usr/ports/databases/py-sqlite3</span></div><div><span style="color: rgb(146, 146, 146);"># There is the conflict with "py27-setuptools-38.5.1”</span></div><div>=&gt; <span style="color: rgb(255, 47, 146);">sudo pkg remove  py27-setuptools-38.5.1</span></div><div>=&gt; <span style="color: rgb(255, 47, 146);">sudo</span><span style="font-weight: bold;"> make</span> <span style="color: rgb(148, 55, 255);">DEFAULT_VERSIONS</span>=<span style="font-weight: bold;">python</span>=<span style="font-weight: bold;">3.6</span><span style="color: rgb(79, 143, 0);"> install </span></div><div><br /></div><div><span style="color: rgb(146, 146, 146);"># Run the Test:</span></div><div>=&gt;<span style="color: rgb(148, 17, 0);"> env/bin</span>/<span style="font-weight: bold;">py.test</span> -<span style="font-weight: bold;">q</span></div><div><br /></div><div>#Configure the database:</div><div> =&gt;<span style="color: rgb(148, 17, 0);"> env/bin</span><span style="color: rgb(0, 143, 0);">/initialize_kfh_alchemy_db</span><span style="color: rgb(0, 150, 255);"> development.ini</span></div><div><br /></div><div><span style="color: rgb(146, 146, 146);"># Run your project.</span></div><div><span style="color: rgb(146, 146, 146);"># First edit the “development.ini” and set the host</span></div><div><span style="color: rgb(0, 144, 81);">[servermain]</span></div><div><span style="font-weight: bold;">use</span> = egg:waitress#main</div><div><span style="color: rgb(146, 146, 146);"># listen = localhost:6543</span></div><div><span style="font-weight: bold;">listen</span> = 192.168.100.250:8585</div><div> </div><div>=&gt;<span style="color: rgb(148, 17, 0);"> env/bin</span>/<span style="font-weight: bold;">pserve </span><span style="color: rgb(4, 51, 255);">development.ini</span></div><div> </div></en-note>