<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">
<en-note><div>The difference between “++i” and “i++”</div><div><br/></div><div><font color="#9437ff">#include </font><font color="#941100">&lt;stdio.h&gt;</font></div><div><font color="#919191">/* If you use the &quot;</font><font color="#941100">++i</font><font color="#919191">&quot; (pre-increment) or &quot;</font><font color="#941100">i++</font><font color="#919191">&quot; (post-increment)<br/></font></div><div><span style="color: rgb(145, 145, 145);"> * just itself ( i.e. without any asignment, there is no difference !</span><br/><font color="#919191"> * &quot;</font><font color="#941100">++i</font><font color="#919191">&quot; = &quot;</font><font color="#941100">i++</font><font color="#919191">&quot; =</font><font color="#941100"> i + 1</font><br/><span style="color: rgb(145, 145, 145);"> * However, you asign a value ( </span><font color="#941100">n = ++i</font><span style="color: rgb(145, 145, 145);"> or </span><font color="#941100">m = i++</font><span style="color: rgb(145, 145, 145);">), then :</span><br/><span style="color: rgb(145, 145, 145);"> * &quot;</span><font color="#941100">++i</font><span style="color: rgb(145, 145, 145);">&quot; will return   the current value of  &quot;i&quot; + &quot;1&quot; immidiatly !</span><br/><span style="color: rgb(145, 145, 145);"> * &quot;</span><font color="#941100">i++</font><span style="color: rgb(145, 145, 145);">&quot; will return the current value of &quot;i&quot; first, then adds &quot;1&quot; to the current value</span><br/><span style="color: rgb(145, 145, 145);"> *       Next time the current will be &quot;i&quot; + &quot;1&quot;  </span><br/><span style="color: rgb(145, 145, 145);"> */</span></div><div><br/></div><div><font color="#008f00">int</font> main(<font color="#008f00"> int</font> argc,<font color="#008f00"> char*</font> argv[] ) {<br/><font color="#008f00">int </font>n = <font color="#941100">0</font>;<br/><font color="#929000">for</font> ( <font color="#008f00">int </font>i = <font color="#941100">0</font>; i &lt; <font color="#941100">4</font>; n = ++i) {<br/><b>printf</b>(<font color="#941100">&quot; Values of ++i =</font> <font color="#9437ff">%d\n</font><font color="#941100">&quot;</font>, n);<br/>}<br/><font color="#008f00">int</font> m = 0;<br/><font color="#929000">for </font>( <font color="#008f00">int</font> j =<font color="#941100"> 0</font>; j &lt;<font color="#941100"> 4</font>; m = j++) {<br/><b>printf</b>(<font color="#941100">“ Values of j++ =</font> <font color="#9437ff">%d\n</font><font color="#941100">&quot;</font>, m);<br/>}</div><div><font color="#929000">return</font><font color="#941100"> 0</font>;<br/></div><div>}<br/></div><div><span><font color="#919191"> Values of ++i = 0</font></span></div><div><span><font color="#919191"> Values of ++i = 1</font></span></div><div><span><font color="#919191"> Values of ++i = 2</font></span></div><div><span><font color="#919191"> Values of ++i = 3</font></span></div><div><span><font color="#919191">-------------------</font></span></div><div><span><font color="#919191"> Values of j++ = 0</font></span></div><div><span><font color="#919191"> Values of j++ = 0</font></span></div><div><span><font color="#919191"> Values of j++ = 1</font></span></div><div><span><font color="#919191"> Values of j++ = 2</font></span></div><div><span> </span></div><div><font color="#005493">Try to use “++i”  and “++j” instead of the assignment “n” and “m”. You will</font></div><div><font color="#005493">get the same out ( which is “++i” ).</font></div><div><br/></div><div><br/></div></en-note>
