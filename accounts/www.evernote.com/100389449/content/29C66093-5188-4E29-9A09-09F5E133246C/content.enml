<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">
<en-note><div style="-evernote-webclip:true"><br/><div style="font-size: 16px; display: inline-block;"><div style="box-sizing:border-box;font-family:sans-serif;"><div style="box-sizing:border-box;font-family:-apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;;font-size:14px;line-height:1.5;color:rgb(36, 41, 46);background-color:rgb(255, 255, 255);min-width:1020px;overflow-wrap:break-word;"><div style="box-sizing:border-box;"><div style="box-sizing:border-box;"><div style="box-sizing:border-box;"><div style="box-sizing:border-box;"><div style="box-sizing:border-box;"><div style="box-sizing:border-box;"><div style="box-sizing:border-box;"><div style="box-sizing:border-box;border-radius:3px;"><div style="box-sizing:border-box;">
    <div style="box-sizing:border-box;display:block;font-family:-apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;;font-size:16px;line-height:1.5;overflow-wrap:break-word;background-color:rgb(255, 255, 255);border-bottom-right-radius:3px;border-bottom-left-radius:3px;padding:45px;border:0px none;border-radius:0px;"><span style="font-family:-apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;;font-size:16px;line-height:1.5;display:table;"></span><h1 style="box-sizing:border-box;margin:0.67em 0px;font-size:2em;margin-bottom:16px;font-weight:600;line-height:1.25;padding-bottom:0.3em;border-bottom:1px solid rgb(234, 236, 239);margin-top:0px;"><a href="https://gist.github.com/datagrok/2199506#virtualenvs-binactivate-is-doing-it-wrong" style="box-sizing:border-box;background-color:transparent;color:rgb(3, 102, 214);text-decoration:none;float:left;padding-right:4px;margin-left:-20px;line-height:1;"><span style="box-sizing:border-box;display:inline-block;fill:currentcolor;vertical-align:middle;overflow:hidden;color:rgb(27, 31, 35);visibility:hidden;"><span style="box-sizing:border-box;"></span></span></a>Virtualenv's <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;font-size:inherit;">bin/activate</code> is Doing It Wrong</h1>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">I'm a Python programmer and frequently work with the excellent <a href="http://www.virtualenv.org/" style="box-sizing:border-box;background-color:transparent;color:rgb(3, 102, 214);text-decoration:none;">virtualenv</a> tool by Ian Bicking.</p>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">Virtualenv is a great tool on the whole but there is one glaring problem: the <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">activate</code> script that virtualenv provides as a convenience to enable its functionality requires you to <em style="box-sizing:border-box;">source</em> it with your shell to invoke it. The <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">activate</code> script sets some environment variables in your <em style="box-sizing:border-box;">current</em> environment and defines for you a <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">deactivate</code> <em style="box-sizing:border-box;">shell function</em> which will (attempt to) help you to undo those changes later.</p>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">This pattern is abhorrently wrong and un-unix-y. <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">activate</code> should instead do what <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">ssh-agent</code> does, and launch a sub-shell or sub-command with a modified environment.</p>
<h2 style="box-sizing:border-box;margin-top:24px;margin-bottom:16px;font-size:1.5em;font-weight:600;line-height:1.25;padding-bottom:0.3em;border-bottom:1px solid rgb(234, 236, 239);"><a href="https://gist.github.com/datagrok/2199506#problems" style="box-sizing:border-box;background-color:transparent;color:rgb(3, 102, 214);text-decoration:none;float:left;padding-right:4px;margin-left:-20px;line-height:1;"><span style="box-sizing:border-box;display:inline-block;fill:currentcolor;vertical-align:middle;overflow:hidden;color:rgb(27, 31, 35);visibility:hidden;"><span style="box-sizing:border-box;"></span></span></a>Problems</h2>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">The approach of modifying the user's current environment suffers from a number of problems:</p>
<ul style="box-sizing:border-box;padding-left:2em;margin-top:0px;margin-bottom:16px;">
<li style="box-sizing:border-box;">It breaks if you don't use a supported shell.</li>
<li style="box-sizing:border-box;margin-top:0.25em;">A separate activate script must be maintained for each supported shell syntax.</li>
<li style="box-sizing:border-box;margin-top:0.25em;">What do you do if you use no shell at all? (I.E. run programs in a virtualenv from a GUI.)</li>
<li style="box-sizing:border-box;margin-top:0.25em;">If the <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">deactivate</code> script fails to un-set an environment variable, it may contaminate other environments.</li>
<li style="box-sizing:border-box;margin-top:0.25em;">If you want to edit <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">deactivate</code> or any other function sourced into your environment, you have to kill your shell and re-source the script to see the changes take effect.</li>
<li style="box-sizing:border-box;margin-top:0.25em;">If you change the current directory from one to another virtual environment and forget to carefully <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">deactivate</code> and <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">activate</code> as you do so, you may end up using libraries from or making changes in the wrong one!</li>
</ul>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">Virtualenv's <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">activate</code> suffers from a number of other warts as well:</p>
<ul style="box-sizing:border-box;padding-left:2em;margin-top:0px;margin-bottom:16px;">
<li style="box-sizing:border-box;">
<p style="box-sizing:border-box;margin-bottom:16px;margin-top:16px;">You can't simply run the script; you have to learn and employ your shell's "source this script" builtin. Many non-experts frequently stumble over this distinction. Doing away with the recommendation to source a shell script should make virtualenv easier to use.</p>
<pre style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;margin-top:0px;margin-bottom:16px;overflow-wrap:normal;padding:16px;overflow:auto;line-height:1.45;background-color:rgb(246, 248, 250);border-radius:3px;"><code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;border-radius:3px;font-size:100%;padding:0px;margin:0px;word-break:normal;white-space:pre;background:transparent none repeat scroll 0% 0%;border:0px none;display:inline;overflow:visible;line-height:inherit;overflow-wrap:normal;background-color:transparent;">  # This file must be used with "source bin/activate" *from bash*
  # you cannot run it directly
</code></pre>
</li>
<li style="box-sizing:border-box;margin-top:0.25em;">
<p style="box-sizing:border-box;margin-bottom:16px;margin-top:16px;">In an attempt to preserve the user's old environment, it declares _OLD_VIRTUAL_PATH, _OLD_VIRTUAL_PYTHONHOME, and _OLD_VIRTUAL_PS1, and must define how to restore them upon deactivation. If you happen to want to modify <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">activate</code> to override more variables specific to your environment, you have to do the same.</p>
</li>
<li style="box-sizing:border-box;margin-top:0.25em;">
<p style="box-sizing:border-box;margin-bottom:16px;margin-top:16px;">Its default means to display whether or not a virtual environment is currently active (modifying the user's PS1 variable) is fragile. On Debian and Ubuntu boxes it becomes confusing if one enters a subshell, or uses a tool like <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">screen</code> or <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">tmux</code>.</p>
</li>
<li style="box-sizing:border-box;margin-top:0.25em;">
<p style="box-sizing:border-box;margin-bottom:16px;margin-top:16px;">It is not executable, and not meant to be used as an executable, yet it lives in a a directory named <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">bin</code>.</p>
</li>
</ul>
<h2 style="box-sizing:border-box;margin-top:24px;margin-bottom:16px;font-size:1.5em;font-weight:600;line-height:1.25;padding-bottom:0.3em;border-bottom:1px solid rgb(234, 236, 239);"><a href="https://gist.github.com/datagrok/2199506#doing-it-right" style="box-sizing:border-box;background-color:transparent;color:rgb(3, 102, 214);text-decoration:none;float:left;padding-right:4px;margin-left:-20px;line-height:1;"><span style="box-sizing:border-box;display:inline-block;fill:currentcolor;vertical-align:middle;overflow:hidden;color:rgb(27, 31, 35);visibility:hidden;"><span style="box-sizing:border-box;"></span></span></a>Doing It Right</h2>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">Entering and exiting a virtual environment should be like using <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">ssh</code> to connect to another machine. When you're done, a simple <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">exit</code> should restore you to your original, unmodified environment.</p>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">An example of a program that does this the Right Way is <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">ssh-agent</code>. In order to communicate the port that it uses to other programs, it must set some variables into the environment. It provides an option to do what virtualenv does, but the better way is to simply ask <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">ssh-agent</code> to launch your command for you, with a modified environment. <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">ssh-agent $SHELL</code> will launch a sub-shell for you with its environment already modified appropriately for <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">ssh-agent</code>. Most Debian and Ubuntu machines even launch X11 this way; see <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">/etc/X11/Xsession.d/90x11-common_ssh-agent</code>.</p>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">Another advantage to the subshell approach is that it is far simpler than the hoops virtualenv jumps through to activate and deactivate an environment. There's no need to set _OLD_ variables since the former environment is restored automatically. There's no need for a <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">deactivate</code> function.</p>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">Finally, employing a prompt context variable instead of messing with PS1 would allow the user to define how that information is presented.</p>
<h2 style="box-sizing:border-box;margin-top:24px;margin-bottom:16px;font-size:1.5em;font-weight:600;line-height:1.25;padding-bottom:0.3em;border-bottom:1px solid rgb(234, 236, 239);"><a href="https://gist.github.com/datagrok/2199506#a-better-activate-inve" style="box-sizing:border-box;background-color:transparent;color:rgb(3, 102, 214);text-decoration:none;float:left;padding-right:4px;margin-left:-20px;line-height:1;"><span style="box-sizing:border-box;display:inline-block;fill:currentcolor;vertical-align:middle;overflow:hidden;color:rgb(27, 31, 35);visibility:hidden;"><span style="box-sizing:border-box;"></span></span></a>A better <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;font-size:inherit;">activate</code>: "<code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;font-size:inherit;">inve</code>"</h2>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">To differentiate, I'm calling this approach "inve" as in "inside this virtual environment, ..." I'll happily take name suggestions.</p>
<h3 style="box-sizing:border-box;margin-top:24px;margin-bottom:16px;font-size:1.25em;font-weight:600;line-height:1.25;"><a href="https://gist.github.com/datagrok/2199506#launching-a-subcommand-with-a-modified-environment" style="box-sizing:border-box;background-color:transparent;color:rgb(3, 102, 214);text-decoration:none;float:left;padding-right:4px;margin-left:-20px;line-height:1;"><span style="box-sizing:border-box;display:inline-block;fill:currentcolor;vertical-align:middle;overflow:hidden;color:rgb(27, 31, 35);visibility:hidden;"><span style="box-sizing:border-box;"></span></span></a>Launching a subcommand with a modified environment</h3>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">How do we make an executable like <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">ssh-agent</code> that launches a subcommand with a modified environment? Easy. Call this <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">my_launcher</code>:</p>
<pre style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;margin-top:0px;margin-bottom:16px;overflow-wrap:normal;padding:16px;overflow:auto;line-height:1.45;background-color:rgb(246, 248, 250);border-radius:3px;"><code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;border-radius:3px;font-size:100%;padding:0px;margin:0px;word-break:normal;white-space:pre;background:transparent none repeat scroll 0% 0%;border:0px none;display:inline;overflow:visible;line-height:inherit;overflow-wrap:normal;background-color:transparent;">#!/bin/sh
export MY_VAR=xyz
exec "$@"
</code></pre>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">Calling "my_launcher firefox" will launch firefox with MY_VAR set to 'xyz' in its environment. The environment where "my_launcher" is called from will not be disturbed.</p>
<h3 style="box-sizing:border-box;margin-top:24px;margin-bottom:16px;font-size:1.25em;font-weight:600;line-height:1.25;"><a href="https://gist.github.com/datagrok/2199506#simplifying-activate" style="box-sizing:border-box;background-color:transparent;color:rgb(3, 102, 214);text-decoration:none;float:left;padding-right:4px;margin-left:-20px;line-height:1;"><span style="box-sizing:border-box;display:inline-block;fill:currentcolor;vertical-align:middle;overflow:hidden;color:rgb(27, 31, 35);visibility:hidden;"><span style="box-sizing:border-box;"></span></span></a>Simplifying <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;font-size:inherit;">activate</code></h3>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">Let's now examine <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">bin/activate</code> to see what we can throw away if we assume that the system takes care of restoring the environment for us when we <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">exit</code>. We don't need the <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">deactivate</code> shell function at all. We don't need any _OLD_ variables. We don't mess with the prompt. What's left?</p>
<pre style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;margin-top:0px;margin-bottom:16px;overflow-wrap:normal;padding:16px;overflow:auto;line-height:1.45;background-color:rgb(246, 248, 250);border-radius:3px;"><code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;border-radius:3px;font-size:100%;padding:0px;margin:0px;word-break:normal;white-space:pre;background:transparent none repeat scroll 0% 0%;border:0px none;display:inline;overflow:visible;line-height:inherit;overflow-wrap:normal;background-color:transparent;">export VIRTUAL_ENV="/home/mike/var/virtualenvs/myvirtualenv"
export PATH="$VIRTUAL_ENV/bin:$PATH"
unset PYTHON_HOME
</code></pre>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">That's it. Three lines, down from 76. Down from 187 if you count all variants for other shells.</p>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">Wrap this with the launcher technique above, call it <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">inve</code>, and <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">./bin/inve $SHELL</code> spawns a new subshell in the active virtualenv. What if you want a no-argument invocation to default to spawning an activated shell? This is the entire script:</p>
<pre style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;margin-top:0px;margin-bottom:16px;overflow-wrap:normal;padding:16px;overflow:auto;line-height:1.45;background-color:rgb(246, 248, 250);border-radius:3px;"><code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;border-radius:3px;font-size:100%;padding:0px;margin:0px;word-break:normal;white-space:pre;background:transparent none repeat scroll 0% 0%;border:0px none;display:inline;overflow:visible;line-height:inherit;overflow-wrap:normal;background-color:transparent;">#!/bin/sh
export VIRTUAL_ENV="/home/mike/var/virtualenvs/myvirtualenv"
export PATH="$VIRTUAL_ENV/bin:$PATH"
unset PYTHON_HOME
exec "${@:-$SHELL}"
</code></pre>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">Now <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">bin/inve</code> does what <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">bin/activate</code> <em style="box-sizing:border-box;">should</em>. By the way: this works for <em style="box-sizing:border-box;">all shells</em>. bash, zsh, csh, fish, ksh, and anything else, with one script.</p>
<h2 style="box-sizing:border-box;margin-top:24px;margin-bottom:16px;font-size:1.5em;font-weight:600;line-height:1.25;padding-bottom:0.3em;border-bottom:1px solid rgb(234, 236, 239);"><a href="https://gist.github.com/datagrok/2199506#more-hacks" style="box-sizing:border-box;background-color:transparent;color:rgb(3, 102, 214);text-decoration:none;float:left;padding-right:4px;margin-left:-20px;line-height:1;"><span style="box-sizing:border-box;display:inline-block;fill:currentcolor;vertical-align:middle;overflow:hidden;color:rgb(27, 31, 35);visibility:hidden;"><span style="box-sizing:border-box;"></span></span></a>More hacks</h2>
<h3 style="box-sizing:border-box;margin-top:24px;margin-bottom:16px;font-size:1.25em;font-weight:600;line-height:1.25;"><a href="https://gist.github.com/datagrok/2199506#re-enabling-current-environment-modification" style="box-sizing:border-box;background-color:transparent;color:rgb(3, 102, 214);text-decoration:none;float:left;padding-right:4px;margin-left:-20px;line-height:1;"><span style="box-sizing:border-box;display:inline-block;fill:currentcolor;vertical-align:middle;overflow:hidden;color:rgb(27, 31, 35);visibility:hidden;"><span style="box-sizing:border-box;"></span></span></a>Re-enabling current environment modification</h3>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">Some users source <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">bin/activate</code> from within their own shell scripts, which I don't find quite as offensive.</p>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;"><code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">ssh-agent</code> also supports this style of use. It too has to deal with the syntax differences between shells to do so. It's not hard to enable this; here's one proposal.</p>
<pre style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;margin-top:0px;margin-bottom:16px;overflow-wrap:normal;padding:16px;overflow:auto;line-height:1.45;background-color:rgb(246, 248, 250);border-radius:3px;"><code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;border-radius:3px;font-size:100%;padding:0px;margin:0px;word-break:normal;white-space:pre;background:transparent none repeat scroll 0% 0%;border:0px none;display:inline;overflow:visible;line-height:inherit;overflow-wrap:normal;background-color:transparent;">#!/bin/sh

# As above, do what's needed to activate
export VIRTUAL_ENV="/home/mike/var/virtualenvs/myvirtualenv"
export PATH="$VIRTUAL_ENV/bin:$PATH"
unset PYTHON_HOME

# If the first argument is -s or -c, do what ssh-agent does
if [ "$1" = "-s" ]; then cat &lt;&lt;- DONE
	export VIRTUAL_ENV="$VIRTUAL_ENV";
	export PATH="$PATH";
	unset PYTHON_HOME;
DONE
elif [ "$1" = "-c" ]; then cat &lt;&lt;- DONE
	setenv VIRTUAL_ENV "$VIRTUAL_ENV";
	setenv PATH "$PATH";
	unset PYTHON_HOME;
DONE

# Otherwise, launch a shell or subcommand
else
	exec "${@:-$SHELL}"
fi
</code></pre>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">Now <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">inve</code> supports the same -s and -c options that <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">ssh-agent</code> does. Where one might previously have written a script like this:</p>
<pre style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;margin-top:0px;margin-bottom:16px;overflow-wrap:normal;padding:16px;overflow:auto;line-height:1.45;background-color:rgb(246, 248, 250);border-radius:3px;"><code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;border-radius:3px;font-size:100%;padding:0px;margin:0px;word-break:normal;white-space:pre;background:transparent none repeat scroll 0% 0%;border:0px none;display:inline;overflow:visible;line-height:inherit;overflow-wrap:normal;background-color:transparent;">#!/bin/sh
source ./activate
... (commands) ...
</code></pre>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">One would now write instead:</p>
<pre style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;margin-top:0px;margin-bottom:16px;overflow-wrap:normal;padding:16px;overflow:auto;line-height:1.45;background-color:rgb(246, 248, 250);border-radius:3px;"><code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;border-radius:3px;font-size:100%;padding:0px;margin:0px;word-break:normal;white-space:pre;background:transparent none repeat scroll 0% 0%;border:0px none;display:inline;overflow:visible;line-height:inherit;overflow-wrap:normal;background-color:transparent;">#!/bin/sh
eval `./inve -s`
... (commands) ...
</code></pre>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">Or, for csh:</p>
<pre style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;margin-top:0px;margin-bottom:16px;overflow-wrap:normal;padding:16px;overflow:auto;line-height:1.45;background-color:rgb(246, 248, 250);border-radius:3px;"><code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;border-radius:3px;font-size:100%;padding:0px;margin:0px;word-break:normal;white-space:pre;background:transparent none repeat scroll 0% 0%;border:0px none;display:inline;overflow:visible;line-height:inherit;overflow-wrap:normal;background-color:transparent;">#!/bin/csh
eval `./inve -c`
... (commands) ...
</code></pre>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">Unfortunately, I don't know if this "eval the output of a command" technique works for all possible shells.</p>
<h3 style="box-sizing:border-box;margin-top:24px;margin-bottom:16px;font-size:1.25em;font-weight:600;line-height:1.25;"><a href="https://gist.github.com/datagrok/2199506#a-system-level-inve" style="box-sizing:border-box;background-color:transparent;color:rgb(3, 102, 214);text-decoration:none;float:left;padding-right:4px;margin-left:-20px;line-height:1;"><span style="box-sizing:border-box;display:inline-block;fill:currentcolor;vertical-align:middle;overflow:hidden;color:rgb(27, 31, 35);visibility:hidden;"><span style="box-sizing:border-box;"></span></span></a>A system-level <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;font-size:inherit;">inve</code></h3>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">I find it convenient to employ a "system-level" <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">inve</code> script that lives in my system <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">$PATH</code>, that I can run from anywhere within any virtual environment, and without specifying the full path to 'ENV/bin/inve'. This goes against the intention that "virtualenvs are self-sufficient once created" so I'm not advocating this technique be used <em style="box-sizing:border-box;">instead</em> of <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">ENV/bin/inve</code>.</p>
<pre style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;margin-top:0px;margin-bottom:16px;overflow-wrap:normal;padding:16px;overflow:auto;line-height:1.45;background-color:rgb(246, 248, 250);border-radius:3px;"><code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;border-radius:3px;font-size:100%;padding:0px;margin:0px;word-break:normal;white-space:pre;background:transparent none repeat scroll 0% 0%;border:0px none;display:inline;overflow:visible;line-height:inherit;overflow-wrap:normal;background-color:transparent;">#!/bin/sh

# inve
#
# usage: inve [COMMAND [ARGS]]
#
# For use with Ian Bicking's virtualenv tool. Attempts to find the root of
# a virtual environment. Then, executes COMMAND with ARGS in the context of
# the activated environment. If no COMMAND is given, activate defaults to a
# subshell.

# First, locate the root of the current virtualenv
while [ "$PWD" != "/" ]; do
	# Stop here if this the root of a virtualenv
	if [ \
		-x bin/python \
		-a -e lib/python*/site.py \
		-a -e include/python*/Python.h ]
	then
		break
	fi
	cd ..
done
if [ "$PWD" = "/" ]; then
	echo "Could not activate: no virtual environment found." &gt;&amp;2
	exit 1
fi

# Activate
export VIRTUAL_ENV="$PWD"
export PATH="$VIRTUAL_ENV/bin:$PATH"
unset PYTHON_HOME
exec "${@:-$SHELL}"
</code></pre>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">Until an <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">inve</code>-like script gets created in virtualenv <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">bin/</code> directories, this system-level script will allow you to immediately use the subshell technique with all existing virtualenvs. If ever the <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">inve</code> script does land in virtualenv's <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">bin/</code>, this system level script could be simply a helper that searches for and invokes <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">ENV/bin/inve</code>:</p>
<pre style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;margin-top:0px;margin-bottom:16px;overflow-wrap:normal;padding:16px;overflow:auto;line-height:1.45;background-color:rgb(246, 248, 250);border-radius:3px;"><code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;border-radius:3px;font-size:100%;padding:0px;margin:0px;word-break:normal;white-space:pre;background:transparent none repeat scroll 0% 0%;border:0px none;display:inline;overflow:visible;line-height:inherit;overflow-wrap:normal;background-color:transparent;"># Locate the root of the current virtualenv
... (same as above) ...
# Activate
exec bin/inve "$@"
</code></pre>
<h3 style="box-sizing:border-box;margin-top:24px;margin-bottom:16px;font-size:1.25em;font-weight:600;line-height:1.25;"><a href="https://gist.github.com/datagrok/2199506#dont-mess-with-my-prompt" style="box-sizing:border-box;background-color:transparent;color:rgb(3, 102, 214);text-decoration:none;float:left;padding-right:4px;margin-left:-20px;line-height:1;"><span style="box-sizing:border-box;display:inline-block;fill:currentcolor;vertical-align:middle;overflow:hidden;color:rgb(27, 31, 35);visibility:hidden;"><span style="box-sizing:border-box;"></span></span></a>Don't mess with my prompt</h3>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">But what about the prompt? Build a PS1 that does the right thing everywhere without needing to be modified to suit a particular purpose. I tend to have a function that collects all the context info this way, in my .bashrc:</p>
<pre style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;margin-top:0px;margin-bottom:16px;overflow-wrap:normal;padding:16px;overflow:auto;line-height:1.45;background-color:rgb(246, 248, 250);border-radius:3px;"><code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;border-radius:3px;font-size:100%;padding:0px;margin:0px;word-break:normal;white-space:pre;background:transparent none repeat scroll 0% 0%;border:0px none;display:inline;overflow:visible;line-height:inherit;overflow-wrap:normal;background-color:transparent;">function ps1_context {
	# For any of these bits of context that exist, display them and append
	# a space.
	virtualenv=`basename "$VIRTUAL_ENV"`
	for v in "$debian_chroot" "$virtualenv" "$PS1_CONTEXT"; do
		echo -n "${v:+$v }"
	done
}

export PS1="$(ps1_context)"'\u@\h:\w\$ '
</code></pre>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">This lets the user control their PS1 and it works everywhere, no matter how many subshells or screen sessions you're nested into. This is the only piece that has to be customized per-shell.</p>
<h2 style="box-sizing:border-box;margin-top:24px;margin-bottom:16px;font-size:1.5em;font-weight:600;line-height:1.25;padding-bottom:0.3em;border-bottom:1px solid rgb(234, 236, 239);"><a href="https://gist.github.com/datagrok/2199506#conclusion" style="box-sizing:border-box;background-color:transparent;color:rgb(3, 102, 214);text-decoration:none;float:left;padding-right:4px;margin-left:-20px;line-height:1;"><span style="box-sizing:border-box;display:inline-block;fill:currentcolor;vertical-align:middle;overflow:hidden;color:rgb(27, 31, 35);visibility:hidden;"><span style="box-sizing:border-box;"></span></span></a>Conclusion</h2>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">While using <code style="box-sizing:border-box;font-family:&quot;SFMono-Regular&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;font-size:85%;padding:0.2em 0.4em;margin:0px;background-color:rgba(27, 31, 35, 0.05);border-radius:3px;">activate</code> is intended only a convenience and is <a href="https://github.com/pypa/virtualenv/issues/247#issuecomment-4853286" style="box-sizing:border-box;background-color:transparent;color:rgb(3, 102, 214);text-decoration:none;">not necessary to work within a virtual environment</a>, most of programmers I know treat it as a black box and never do without it. I suspect that, in part, the complexity of the script is what prevents more programmers from avoiding it.</p>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">Perhaps the worst part about a popular, useful tool like virtualenv using this antipattern is that many other programmers are adopting it as normative and using it for their own work. <a href="http://www.doughellmann.com/projects/virtualenvwrapper/" style="box-sizing:border-box;background-color:transparent;color:rgb(3, 102, 214);text-decoration:none;">virtualenvwrapper</a> and <a href="https://github.com/dustinlacewell/capn" style="box-sizing:border-box;background-color:transparent;color:rgb(3, 102, 214);text-decoration:none;">dustinlacewell/capn</a> are two examples. Stop doing this, everyone!</p>
<h1 style="box-sizing:border-box;margin:0.67em 0px;font-size:2em;margin-top:24px;margin-bottom:16px;font-weight:600;line-height:1.25;padding-bottom:0.3em;border-bottom:1px solid rgb(234, 236, 239);"><a href="https://gist.github.com/datagrok/2199506#post-script-update-other-projects" style="box-sizing:border-box;background-color:transparent;color:rgb(3, 102, 214);text-decoration:none;float:left;padding-right:4px;margin-left:-20px;line-height:1;"><span style="box-sizing:border-box;display:inline-block;fill:currentcolor;vertical-align:middle;overflow:hidden;color:rgb(27, 31, 35);visibility:hidden;"><span style="box-sizing:border-box;"></span></span></a>Post-Script Update: Other Projects</h1>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:16px;">I wrote this back in March 2012, and cobbled together at that time some scripts that worked well-enough for me to get away from virtualenv's bad behavior. After some encouragement and feedback from the community I started a patch to the virtualenv project that would make it use this method, and added some adapter code that would avoid breaking the workflow for those used to the current-shell-modification behavior, but I still haven't finished it. Meanwhile, some great projects have sprung up and properly implemented this idea:</p>
<ul style="box-sizing:border-box;padding-left:2em;margin-top:0px;margin-bottom:16px;">
<li style="box-sizing:border-box;">berdario's <a href="https://github.com/berdario/invewrapper" style="box-sizing:border-box;background-color:transparent;color:rgb(3, 102, 214);text-decoration:none;">invewrapper</a></li>
<li style="box-sizing:border-box;margin-top:0.25em;">sashahart's <a href="https://github.com/sashahart/vex" style="box-sizing:border-box;background-color:transparent;color:rgb(3, 102, 214);text-decoration:none;">vex</a></li>
</ul>
<p style="box-sizing:border-box;margin-top:0px;margin-bottom:0px;">I'm super happy about this. I don't mind parallel implementations; it's all open source and we can build upon one another's good ideas.</p>
<span style="font-family:-apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;;font-size:16px;line-height:1.5;display:table;clear:both;"></span></div>
  </div></div></div></div></div></div></div></div></div></div></div></div><br/></div></en-note>