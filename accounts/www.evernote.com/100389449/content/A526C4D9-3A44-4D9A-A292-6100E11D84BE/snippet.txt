Compound Data Types Arrays You can initialize an array without giving a size ( the compile will figure out the size) int a[] = { 0, 1, 1, 2, 3, 5 }; The dimension is optional, but once you set you can not change it. if you set an array size and intialize the same time, the size must be equal or bigger than the number of the elements. If the dimension is bigger than the number of the elements, the remaining part will be filled by zeros. int a[5] = { 10, 20, 30 }; // a[0] = 10, a[1] = 20, a[2] = 30, a[3] = 0, a[4] = 0; Multi-demensional arrays are the arrays of the arrays: int Array[Nx][Ny] ; { { a11, a12, a13}, —> Array [0][0:3] —> Nx {a21, a22, a23}, —> Array [1][0:3] —> Nx {a31, a32, a33} } —> Array[2][0:3] —> Nx When you do for loop , the first size will be the most outer one. Example: Array[Nx] [Ny] [Nz] will start from nx = 0 , ny = 0 do loop for each nz = 0,1,2,…., Nz-1 nx = 0, ny = 1 do loop for each nz = 0,1,2,…., Nz-1 …. (so on till we reach ny = Ny-1 ) Then, nx =1 and repeat t