<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">
<en-note><div><span style="font-weight: bold; font-size: 24px;">Creating a case-sensitive Disk Image</span></div><div><span style="font-weight: bold; font-size: 24px;"><br/></span></div><div><font color="#919191">In a default installation, Mac OS runs on a case-preserving but case-insensitive filesystem. </font></div><div><font color="#919191">This type of filesystem is not supported by git and will cause some git commands (such as </font></div><div><font color="#919191">git status) to behave abnormally. Because of this, we recommend that you always work with </font></div><div><font color="#919191">the AOSP source files on a case-sensitive filesystem. This can be done fairly easily using a disk </font></div><div><font color="#919191">image, discussed below.</font><br/></div><div><br/></div><div><span style="font-size: 18px;">=&gt; <b>mkdir</b><font color="#941100"> </font></span><span style="font-size: 18px;"><font color="#941100">/Volumes/My_Book_Pro/KFH/KFH_Projects/Android</font></span></div><div><span style="font-size: 18px;">=&gt;<b> cd</b> </span><span style="font-size: 18px;"><font color="#941100">/Volumes/My_Book_Pro/KFH/KFH_Projects/Android</font></span></div><div><span style="font-size: 18px;"><font color="#919191"><br/></font></span></div><div><span style="font-size: 18px;"><font color="#919191"># To create the file system:</font></span></div><div><span style="font-size: 18px;">=&gt;<b> sudo</b> <span style="font-size: 18px;"><font color="#0433ff">hdiutil</font><font color="#008f00"> create</font> <b>-type</b> SPARSE <b>-fs</b> <font color="#9437ff">'Case-sensitive Journaled HFS+' </font><b>-size 60g</b>  <font color="#0096ff">android.dmg</font></span></span></div><div><span style="font-size: 18px;"/>( this will create 60 GB <b> <font color="#0096ff">android.dmg.sparseimage</font></b> file)</div><div><br/></div><div><font color="#919191"># If you want to increase the size later , say to 70 GB:</font></div><div><font color="#919191"># =&gt; sudo hdiutil resize -size 70g</font><font color="#5e5e5e"> </font><font color="#0096ff">android.dmg.sparseimage</font></div><div><br/></div><div><font color="#919191"># To mount</font></div><div>=&gt;<b> sudo</b> <font color="#0433ff">hdiutil </font><font color="#009051">attach</font> <font color="#0096ff">android.dmg.sparseimage</font> <b> -mountpoint</b><font color="#941100"> /Volumes/android</font></div><div><font color="#919191"># To unmount: </font></div><div>=&gt;<b> sudo</b> <font color="#0433ff">hdiutil</font> <font color="#ff2f92">detach</font> <font color="#941100"> /Volumes/android</font></div><div><font color="#941100"><br/></font></div><div><font color="#5e5e5e"># You can add the following to your “.bashrc” file to mount/umount the file system&quot;</font></div><div><font color="#5e5e5e">/*****  /Users/khasanov/.bashrc ****/</font></div><div><span><font color="#5e5e5e"># mount the android file image</font></span></div><div><span><font color="#5e5e5e">function mountAndroid { sudo hdiutil attach  /Volumes/My_Book_Pro/KFH/KFH_Projects/Android/android.dmg.sparseimage -mountpoint /Volumes/android; }</font></span></div><div><span><font color="#5e5e5e"># umount the android file image</font></span></div><div><span><font color="#5e5e5e">function umountAndroid { sudo hdiutil detach /Volumes/android; }</font></span></div><div><font color="#5e5e5e">/********************* End **************/</font></div><div><span style="font-weight: bold; font-size: 24px;"><br/></span></div><h4><font style="font-size: 24px;">Setting a file descriptor limit</font></h4><div>On Mac OS, the default limit on the number of simultaneous file descriptors open is too low </div><div>and a highly parallel build process may exceed this limit.</div><div><br/></div><div>To increase the cap, add the following lines to your<font color="#941100"> ~/.bashrc</font>:</div><div><br/></div><div># set the number of open files to be 1024</div><div><font style="color: rgb(4, 51, 255);">ulimit -S -n 1024</font></div><div><br/></div><div><span style="font-weight: bold; font-size: 24px;"><br/></span></div><div><span style="font-weight: bold; font-size: 24px;">Downloading the Source</span></div><div><br/></div><div><b><u>Step 1: Installing Repo</u></b> ( the tool that makes easy to work with Git )</div><div># /Users/khasanov/bin</div><div>=&gt; mkdir ~/bin  </div><div># Add the “bin” to your PATH</div><div>=&gt; <span style="font-weight: bold;">curl</span> <a href="https://storage.googleapis.com/git-repo-downloads/repo">https://storage.googleapis.com/git-repo-downloads/repo</a> &gt; ~/bin/repo</div><div>=&gt; <span style="font-weight: bold;">chmod</span> a+x ~/bin/repo</div><div><br/></div><div><b><u>Step 2: Initializing a Repo client</u></b></div><div><br/></div><div># Create an empty directory to hold the working files:</div><div>=&gt; mkdir /Volumes/android/working_directory</div><div>=&gt; cd   /Volumes/android/working_directory</div><div><br/></div><div># Configure git with your name and email address:</div><div>=&gt; git config —global user.name “Karshi Hasanov”</div><div>=&gt; git config —global user.email “karshi.hasanov@gmail.com”</div><div><br/></div><div># Run repo init to bring down the latest version of Repo with all its most recent bug fixes. </div><div># You must specify a URL for the manifest, which specifies where the various repositories</div><div># included in the Android source will be placed within your working directory.</div><div>=&gt; repo init -u <a href="https://android.googlesource.com/platform/manifest">https://android.googlesource.com/platform/manifest</a></div><div><br/></div><div># To check out a branch other than &quot;master&quot;, specify it with -b. </div><div># For a list of branches, see <a href="https://source.android.com/source/build-numbers.html#source-code-tags-and-builds">Source Code Tags and Builds</a>.</div><div><br/></div><div>=&gt; repo init -u <a href="https://android.googlesource.com/platform/manifest">https://android.googlesource.com/platform/manifest</a> -b  android-4.4.2_r2</div><div><br/></div><div># A successful initialization will end with a message stating that Repo is initialized in your</div><div>#  working directory. Your client directory should now contain a .repo directory where files </div><div># such as the manifest will be kept.</div><div><br/></div><div>Step 3: Downloading the Android Source Tree</div><div><br/></div><div>=&gt; cd /Volumes/android/working_directory</div><div><br/></div><div># To pull down the Android source tree to your working directory from the repositories as </div><div># specified in the default manifest, run</div><div>=&gt; repo sync  </div><div>( this might take a while for the first time)</div><div><br/></div><div><ol start="1"/></div><div><br/></div></en-note>
