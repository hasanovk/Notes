<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">
<en-note><div><span style="font-weight: bold; font-size: 24px;">Method I : Using the </span><span style="font-weight: bold; font-size: 24px; color: rgb(148, 55, 255);">Runnable</span><span style="font-weight: bold; font-size: 24px;"> Interface</span></div><div><br/></div><div><span style="color: rgb(145, 145, 145);">/*** </span></div><div><span style="color: rgb(145, 145, 145);">Example 1 : In this example we will show how to implement the Runnable Interface</span></div><div><span style="color: rgb(145, 145, 145);">     </span><span style="color: rgb(145, 145, 145);">    </span><span style="color: rgb(145, 145, 145);">    </span><span style="color: rgb(145, 145, 145);">    </span><span style="color: rgb(145, 145, 145);">    </span><span style="color: rgb(145, 145, 145);">and call the call its methods.</span></div><div><span style="color: rgb(145, 145, 145);">   </span><span style="color: rgb(145, 145, 145);">    </span><span style="color: rgb(145, 145, 145);">    </span><span style="color: rgb(145, 145, 145);">    </span><span style="color: rgb(145, 145, 145);">    </span><span style="color: rgb(145, 145, 145);">  </span><span style="color: rgb(145, 145, 145);">The class “HelloRunner.java” which implements the Runnable Interface.</span></div><div><span style="color: rgb(145, 145, 145);">***/</span></div><div><span style="color: rgb(0, 144, 81);">public</span> <span style="color: rgb(4, 51, 255);">class </span><span style="color: rgb(148, 17, 0);">HelloRunner</span> <span style="font-weight: bold;">implements</span> <span style="color: rgb(148, 55, 255);">Runnable</span> {</div><div>   <span style="font-weight: bold;"> int</span> i;</div><div>    <span style="color: rgb(145, 145, 145);">// The Interface has only one method “run()” to override.</span></div><div>    <span style="color: rgb(0, 144, 81);">public</span> <span style="font-weight: bold;">void</span> <span style="color: rgb(148, 17, 0);">run()</span> {</div><div>      <span style="font-weight: bold;"> i=0</span>;</div><div>       <span style="font-weight: bold;"> while ( i &lt; 10 </span>) {</div><div>            <span style="font-weight: bold;">System.out.println</span> (“Created Thread Loop” +<span style="font-weight: bold;"> i++</span>);</div><div>            }</div><div>        }</div><div>    }</div><div><br/></div><div># The class “ThreadTester.java” will uses the above class to create the threads</div><div><span style="color: rgb(0, 144, 81);">public</span> <span style="color: rgb(4, 51, 255);">class</span> <span style="color: rgb(148, 17, 0);">ThreadTester </span>{</div><div>    <span style="color: rgb(0, 144, 81);">public</span><span style="font-weight: bold;"> static void main</span>(String[] args) {</div><div>        <span style="color: rgb(145, 145, 145);">// Create the instance of the HelloRunner class</span></div><div>        <span style="color: rgb(148, 17, 0);">HelloRunne</span>r <span style="font-weight: bold;">runner</span> = new <span style="color: rgb(148, 17, 0);">HelloRunner()</span>;</div><div>        <span style="color: rgb(145, 145, 145);"># Create the Thread object</span> </div><div>        <span style="color: rgb(148, 17, 0);">Thread</span> <span style="font-weight: bold;">myThread </span>= new <span style="color: rgb(148, 17, 0);">Thread</span>(<span style="font-weight: bold;">runner</span>);</div><div>        <span style="color: rgb(145, 145, 145);">// Start the Thread object.</span></div><div>        <span style="font-weight: bold;">myThread</span>.<span style="color: rgb(0, 144, 81);">start()</span>;</div><div><br/></div><div>       <span style="color: rgb(145, 145, 145);"> // This loop belong to the main thread (i.e. the main loop)</span></div><div><span style="font-weight: bold;">        int i = 0;</span></div><div>       <span style="font-weight: bold;"> while ( i &lt; 5)</span> {</div><div>            <span style="font-weight: bold;">System.out.println</span>(“This is from the main thread loop” + i++);</div><div>            }</div><div>        }</div><div>}</div><div><en-media hash="e8efded1eb113181f63615fed5a48e32" type="image/png"/><br/></div><div><br/></div><div><br/></div><div><span style="color: rgb(145, 145, 145);">/***</span></div><div><span style="color: rgb(145, 145, 145);">Example 2:  The often we want an object to handle its own threads. In other words, we want to create the</span></div><div><span style="color: rgb(145, 145, 145);">thread inside the class which implements the Runnable:</span></div><div><span style="color: rgb(145, 145, 145);">***/</span></div><div><span style="color: rgb(145, 145, 145);"><br/></span></div><div><span style="color: rgb(0, 144, 81);">public</span> <span style="color: rgb(4, 51, 255);">class  </span><font color="#941100">MyR</font><span style="color: rgb(148, 17, 0);">unner</span> <span style="font-weight: bold;">implements</span> <span style="color: rgb(148, 55, 255);">Runnable</span> {</div><div>   <span style="font-weight: bold;"> int</span> i;</div><div>    <font color="#9437ff">Thread</font> <font color="#ff40ff">myThread</font>;<br/></div><div><span><span>    // Constructor</span><br/></span></div><div><span><span>    <font color="#941100">MyRunner</font>(String name) {<br/></span></span></div><div><span><span>        <font color="#9437ff">myThread</font> = <b>new</b> <font color="#9437ff">Thread</font>(this);<br/></span></span></div><div><span><span><span><span><span>        <font color="#ff40ff">myThread</font>.<b>setName</b>(name);<br/></span></span></span></span></span></div><div><span><span><span><span><span><span><span>        <font color="#ff40ff">myThread</font>.<b>star</b>t();<br/></span></span></span></span></span></span></span></div><div>    <span style="color: rgb(145, 145, 145);">// The Interface has only one method “run()” to override.</span></div><div>    <span style="color: rgb(0, 144, 81);">public</span> <span style="font-weight: bold;">void</span> <span style="color: rgb(148, 17, 0);">run()</span> {</div><div>      <span style="font-weight: bold;"> i=0</span>;</div><div>       <span style="font-weight: bold;"> while ( i &lt; 10 </span>) {</div><div>            <span style="font-weight: bold;">System.out.println</span> (“The next number is: ” +<span style="font-weight: bold;"> i++</span>);</div><div>            }</div><div>       }</div><div> }</div><div><span style="color: rgb(145, 145, 145);">// Test class</span></div><div><font color="#4f8f00">public</font> <font color="#0433ff">class</font> <font color="#941100">ThreadTester</font> {</div><div><br/></div><div><span><span>    <span>    </span></span><font color="#4f8f00">public</font></span> <b><span>static</span> <span>void</span> main</b>(String[] <span>args</span>) {</div><div><span><span>    <span>    <span>    </span></span></span><b>long</b></span> <span>startTime </span>= <font color="#531b93">System.currentTimeMillis();</font></div><div><br/></div><div><span>    <span>        <font color="#941100">My</font></span></span><font color="#941100">Runner</font><font color="#929000"> <span style="text-decoration: underline;">runner</span></font> =<b> new</b> <font color="#941100">MyRunner</font>(&quot;MyThread-1&quot;);</div><div><br/></div><div><span>    <span>    <span>    </span></span></span><b>long</b> i = 0L;</div><div>        </div><div><span><span>    <span>       <b> </b></span></span><b>while</b></span> ( <span>i </span>&lt; 600000) {</div><div>            <span>    </span>System.out.println(&quot;The next number is &quot; + i*i);</div><div>         <span>    <span>    </span></span>i++;</div><div>        <span>    <span>    </span></span>}</div><div>  </div><div>       <span>    <span>  </span></span><b>long </b><font color="#009193">duration</font> =<font color="#531b93"> System.currentTimeMillis() </font>- startTime;</div><div>      <span>    </span>  <font color="#531b93">System.out.println</font>(&quot;The program completed in : &quot; + <font color="#009193">duration</font> + &quot; (milli seconds)&quot;);</div><div>       </div><div>}</div><div>}</div><div><span style="color: rgb(145, 145, 145);"><br/></span></div><div><span style="color: rgb(145, 145, 145);">/***</span></div><div><span style="color: rgb(145, 145, 145);"> Example 3: In the previous example we did not have any control of the created threads.</span></div><div><span style="color: rgb(145, 145, 145);">                    Sometimes we want some application running in a thread to stop or start at </span></div><div><span style="color: rgb(145, 145, 145);">                    a given time.</span></div><div><span style="color: rgb(145, 145, 145);">                    In other words, we want to have sort of control of the threads.</span></div><div><span style="color: rgb(145, 145, 145);">***/</span></div><div><span style="color: rgb(145, 145, 145);">// Here we made some modification to our “HelloRunner.java” :</span></div><div><span style="color: rgb(145, 145, 145);">// Now we have some condition when to run and stop</span></div><div><span style="color: rgb(0, 144, 81);">public</span> <span style="color: rgb(4, 51, 255);">class </span><span style="color: rgb(148, 17, 0);">Runner</span> <span style="font-weight: bold;">implements</span> <span style="color: rgb(148, 55, 255);">Runnable</span> {</div><div>   <span style="font-weight: bold;"> private boolean timeToStop = </span><span style="font-weight: bold; color: rgb(255, 38, 0);">false</span><span style="font-weight: bold;">;</span></div><div>    <span style="color: rgb(0, 144, 81);">public</span> <span style="font-weight: bold;">void</span> <span style="color: rgb(148, 17, 0);">run(</span>) {</div><div>      <span style="font-weight: bold;"> while ( !timeToStop ) {</span></div><div>       <span style="font-weight: bold;">    </span><span style="color: rgb(145, 145, 145);"> // run the code untill we are told to stop</span></div><div><span style="color: rgb(145, 145, 145);">            // … code goes here ...</span></div><div>            }</div><div>           <span style="color: rgb(145, 145, 145);"> // clean up the things before the run() method ends</span></div><div>        }</div><div>  <span style="color: rgb(0, 143, 0);">  public </span><span style="font-weight: bold;"> void</span><span style="color: rgb(148, 17, 0);"> stopRunning()</span> {</div><div>       <span style="font-weight: bold;"> timeToStop</span> =<span style="color: rgb(0, 143, 0);"> true</span>;</div><div>    }</div><div><br/></div><div><br/></div><div><br/></div><div><br/></div></en-note>
