<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">
<en-note><div style="-evernote-webclip:true"><br/><div style="font-size: 16px; display: inline-block;"><div style="overflow-wrap:break-word;box-sizing:border-box;"><div style="box-sizing:border-box;overflow-wrap:break-word;font-family:&quot;Main&quot;, sans-serif;font-weight:400;font-size:14px;line-height:1.8;transition:background-color 0.5s ease 0s;background-color:var(--color-bg);color:var(--color-fg);"><div style="overflow-wrap:break-word;box-sizing:border-box;"><div style="overflow-wrap:break-word;box-sizing:border-box;transition:opacity 0.5s ease 0s;"><div style="overflow-wrap:break-word;box-sizing:border-box;background-color:var(--color-bg-content);overflow:auto;"><div style="overflow-wrap:break-word;box-sizing:border-box;">
        <p style="overflow-wrap:break-word;box-sizing:border-box;hyphens:auto;">With the brilliant <a href="http://termux.com/" style="overflow-wrap:break-word;box-sizing:border-box;text-decoration:underline;color:var(--color-fg);">Termux</a> terminal emulator app you can run an SSH server on your Android.</p>
<p style="overflow-wrap:break-word;box-sizing:border-box;hyphens:auto;">Perviously I used <a href="https://play.google.com/store/apps/details?id=berserker.android.apps.sshdroid" style="overflow-wrap:break-word;box-sizing:border-box;text-decoration:underline;color:var(--color-fg);">SSHDroid</a> to achieve this, but with Termux is much nicer because you have access to a working package manager.</p>
<h1 style="overflow-wrap:break-word;box-sizing:border-box;font-size:30px;font-weight:400;text-align:left;">Run the service</h1>
<p style="overflow-wrap:break-word;box-sizing:border-box;hyphens:auto;">You neet to install the OpenSSH package</p>
<pre style="overflow-wrap:break-word;box-sizing:border-box;line-height:1em;font-family:&quot;Mono&quot;, monospace;"><code style="overflow-wrap:break-word;box-sizing:border-box;line-height:1em;font-family:&quot;Mono&quot;, monospace;padding:1px 5px;background-color:var(--color-main-dark);border:1px solid var(--color-fg);max-width:100%;overflow:auto;display:block;white-space:pre-wrap;">    apt install openssh</code></pre>
<p style="overflow-wrap:break-word;box-sizing:border-box;hyphens:auto;">and use following command to start the ssh server.</p>
<pre style="overflow-wrap:break-word;box-sizing:border-box;line-height:1em;font-family:&quot;Mono&quot;, monospace;"><code style="overflow-wrap:break-word;box-sizing:border-box;line-height:1em;font-family:&quot;Mono&quot;, monospace;padding:1px 5px;background-color:var(--color-main-dark);border:1px solid var(--color-fg);max-width:100%;overflow:auto;display:block;white-space:pre-wrap;">    sshd</code></pre>
<p style="overflow-wrap:break-word;box-sizing:border-box;hyphens:auto;">And there you go. Your ssh service is now running on port 8022.</p>
<pre style="overflow-wrap:break-word;box-sizing:border-box;line-height:1em;font-family:&quot;Mono&quot;, monospace;"><code style="overflow-wrap:break-word;box-sizing:border-box;line-height:1em;font-family:&quot;Mono&quot;, monospace;padding:1px 5px;background-color:var(--color-main-dark);border:1px solid var(--color-fg);max-width:100%;overflow:auto;display:block;white-space:pre-wrap;">    ssh localhost -p 8022</code></pre>
<h1 style="overflow-wrap:break-word;box-sizing:border-box;font-size:30px;font-weight:400;text-align:left;">Adding your Public key</h1>
<p style="overflow-wrap:break-word;box-sizing:border-box;hyphens:auto;">You can't do password authentication in Termux, therefore you need to put your OpenSSH public key into the ~/.ssh/authorized_keys file.</p>
<p style="overflow-wrap:break-word;box-sizing:border-box;hyphens:auto;">This file will need to be created and permissions set to 600.</p>
<pre style="overflow-wrap:break-word;box-sizing:border-box;line-height:1em;font-family:&quot;Mono&quot;, monospace;"><code style="overflow-wrap:break-word;box-sizing:border-box;line-height:1em;font-family:&quot;Mono&quot;, monospace;padding:1px 5px;background-color:var(--color-main-dark);border:1px solid var(--color-fg);max-width:100%;overflow:auto;display:block;white-space:pre-wrap;">    touch ~/.ssh/authorized_keys
    # Set Permissions to the file
    chmod 600 ~/.ssh/authorized_keys
    # Make sure the folder .ssh folder has the correct permissions
    chmod 700 ~/.ssh</code></pre>
<p style="overflow-wrap:break-word;box-sizing:border-box;hyphens:auto;">If you do not have a OpenSSH key pair yet, you can generate one with the following command:</p>
<pre style="overflow-wrap:break-word;box-sizing:border-box;line-height:1em;font-family:&quot;Mono&quot;, monospace;"><code style="overflow-wrap:break-word;box-sizing:border-box;line-height:1em;font-family:&quot;Mono&quot;, monospace;padding:1px 5px;background-color:var(--color-main-dark);border:1px solid var(--color-fg);max-width:100%;overflow:auto;display:block;white-space:pre-wrap;">    ssh-keygen</code></pre>
<p style="overflow-wrap:break-word;box-sizing:border-box;hyphens:auto;">You may or may not enter a passphrase and if you don't specify otherwise, your key pair will have been saved under ~/.ssh/id_rsa and ~/.ssh/id_rsa.pub. You can then add it to the ~/.ssh/authorized_keys with</p>
<pre style="overflow-wrap:break-word;box-sizing:border-box;line-height:1em;font-family:&quot;Mono&quot;, monospace;"><code style="overflow-wrap:break-word;box-sizing:border-box;line-height:1em;font-family:&quot;Mono&quot;, monospace;padding:1px 5px;background-color:var(--color-main-dark);border:1px solid var(--color-fg);max-width:100%;overflow:auto;display:block;white-space:pre-wrap;">    cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys
    chmod 600 ~/.ssh/authorized_keys</code></pre>
<p style="overflow-wrap:break-word;box-sizing:border-box;hyphens:auto;">Then you can test it by connecting to your ssh service</p>
<pre style="overflow-wrap:break-word;box-sizing:border-box;line-height:1em;font-family:&quot;Mono&quot;, monospace;"><code style="overflow-wrap:break-word;box-sizing:border-box;line-height:1em;font-family:&quot;Mono&quot;, monospace;padding:1px 5px;background-color:var(--color-main-dark);border:1px solid var(--color-fg);max-width:100%;overflow:auto;display:block;white-space:pre-wrap;">    # -i $PATH_TO_FILE/filename is only required if the id_rsa file is not ~/.ssh/id_rsa
    ssh localhost -p 8022 -i %PATH_TO_KEY-FILE%/%NAME_OF_KEY%</code></pre>
<p style="overflow-wrap:break-word;box-sizing:border-box;hyphens:auto;">You can now use your private key (~/.ssh/id_rsa) to login to your Termux SSH Server. Simply copy it to your computer (by copying it to internal storage first [cp ~/.ssh/id_rsa /sdcard]) and use it in your ssh client.</p>
<h2 style="overflow-wrap:break-word;box-sizing:border-box;font-weight:400;text-align:left;">OpenSSH</h2>
<p style="overflow-wrap:break-word;box-sizing:border-box;hyphens:auto;">If you're using OpenSSH (on Linux or Cygwin) you can use it directly:</p>
<pre style="overflow-wrap:break-word;box-sizing:border-box;line-height:1em;font-family:&quot;Mono&quot;, monospace;"><code style="overflow-wrap:break-word;box-sizing:border-box;line-height:1em;font-family:&quot;Mono&quot;, monospace;padding:1px 5px;background-color:var(--color-main-dark);border:1px solid var(--color-fg);max-width:100%;overflow:auto;display:block;white-space:pre-wrap;">    # -i $PATH_TO_FILE/filename is only required if the id_rsa file is not ~/.ssh/id_rsa
    ssh $IP -p 8022 -i %PATH_TO_KEY-FILE%/%NAME_OF_KEY%</code></pre>
<h2 style="overflow-wrap:break-word;box-sizing:border-box;font-weight:400;text-align:left;">PuTTY</h2>
<p style="overflow-wrap:break-word;box-sizing:border-box;hyphens:auto;">If you're using PuTTY you will need to convert it to the PuTTY Private Key format first.</p>
<ol style="overflow-wrap:break-word;box-sizing:border-box;">
<li style="overflow-wrap:break-word;box-sizing:border-box;">Download and run <a href="http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html" style="overflow-wrap:break-word;box-sizing:border-box;text-decoration:underline;color:var(--color-fg);">PuTTYgen</a></li>
<li style="overflow-wrap:break-word;box-sizing:border-box;">Load the private key (id_rsa)</li>
<li style="overflow-wrap:break-word;box-sizing:border-box;">Save the private key as a *.ppk file.</li>
<li style="overflow-wrap:break-word;box-sizing:border-box;">Download and run <a href="http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html" style="overflow-wrap:break-word;box-sizing:border-box;text-decoration:underline;color:var(--color-fg);">PuTTY </a></li>
<li style="overflow-wrap:break-word;box-sizing:border-box;">Enter the IP address of your Android device and use port 8022</li>
<li style="overflow-wrap:break-word;box-sizing:border-box;">Under Connection&gt;SSH&gt;Auth you can browse for the *.pkk file</li>
<li style="overflow-wrap:break-word;box-sizing:border-box;">Click open</li>
<li style="overflow-wrap:break-word;box-sizing:border-box;">You can leave "login as:" blank</li>
</ol>
<p style="overflow-wrap:break-word;box-sizing:border-box;hyphens:auto;">You should now be connected to your Android device via SSH.</p>
<h2 style="overflow-wrap:break-word;box-sizing:border-box;font-weight:400;text-align:left;">If it still doesn't work</h2>
<pre style="overflow-wrap:break-word;box-sizing:border-box;line-height:1em;font-family:&quot;Mono&quot;, monospace;"><code style="overflow-wrap:break-word;box-sizing:border-box;line-height:1em;font-family:&quot;Mono&quot;, monospace;padding:1px 5px;background-color:var(--color-main-dark);border:1px solid var(--color-fg);max-width:100%;overflow:auto;display:block;white-space:pre-wrap;">    killall sshd
    sshd -d</code></pre>
<p style="overflow-wrap:break-word;box-sizing:border-box;hyphens:auto;">If it is still prompts you for a password you can enter sshd's debug mode with the above command and see exactly why your key has been rejected. The reason usually are bad permission on either your home directory, your .ssh folder or your authorized_keys file.</p>
<p style="overflow-wrap:break-word;box-sizing:border-box;hyphens:auto;">The correct permissions are:</p>
<pre style="overflow-wrap:break-word;box-sizing:border-box;line-height:1em;font-family:&quot;Mono&quot;, monospace;"><code style="overflow-wrap:break-word;box-sizing:border-box;line-height:1em;font-family:&quot;Mono&quot;, monospace;padding:1px 5px;background-color:var(--color-main-dark);border:1px solid var(--color-fg);max-width:100%;overflow:auto;display:block;white-space:pre-wrap;">    chmod 700 ~
    chmod 700 ~/.ssh
    chmod 600 ~/.ssh/*</code></pre>
<hr style="overflow-wrap:break-word;box-sizing:border-box;"/>
<p style="overflow-wrap:break-word;box-sizing:border-box;hyphens:auto;">I hope in the future Termux will allow us to register sshd as a proper service which would automatically start on system boot. Right now I have the 'sshd' command in my .bashrc file and I am using <a href="https://play.google.com/store/apps/details?id=net.dinglisch.android.taskerm" style="overflow-wrap:break-word;box-sizing:border-box;text-decoration:underline;color:var(--color-fg);">Tasker </a>to launch Termux after boot. You can also use the <a href="https://play.google.com/store/apps/details?id=com.termux.widget&amp;hl=en" style="overflow-wrap:break-word;box-sizing:border-box;text-decoration:underline;color:var(--color-fg);">Termux widget</a> to quickly start sshd with a widget.</p>
<p style="overflow-wrap:break-word;box-sizing:border-box;hyphens:auto;">See also: <a href="https://glow.li/technology/2016/9/20/access-termux-via-usb/" style="overflow-wrap:break-word;box-sizing:border-box;text-decoration:underline;color:var(--color-fg);">Access the SSH server via USB instead of WiFi</a></p>
    </div></div></div></div></div></div></div><br/></div></en-note>