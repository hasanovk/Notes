<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd"><en-note><div style="-evernote-webclip:true;"><div><br /></div><div><span style="font-size: 16px;"><div style="font-size:100%;"><div style="font-size: 12px; background-image: url(file:///Applications/Evernote.app/Contents/Resources/common-editor-mac/&amp;quot;http://www.javacreed.com/wp-content/themes/PressGrid-3.3.1/images/bg/bg1.png&amp;quot;); background-attachment: scroll; background-color: rgb(244, 244, 244); background-position: 0px 0px; background-repeat: repeat repeat;"><div style="border-radius:0px;background:rgba(0, 0, 0, 0) none repeat scroll 0% 0%;box-shadow:none;"><div style="font-size:13px;background:rgb(255, 255, 255) none repeat scroll 0% 0%;"><div style="margin:30px 0px 0px;padding:0px;"><div><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;">
</span><div style="position:relative;float:left;width:100%;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;"> </span><en-media hash="60c48f18f373afff60c4dc814a5fe277" type="image/png" style="height:auto;max-width:100%;vertical-align:middle;border:0px none;float:left;width:100%;" width="639" /><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;">
</span></div></div></div><div style="margin:30px 0px;font-size:12px;"><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">Java objects can be converted into JSON strings using the Gson API (</span><a href="https://code.google.com/p/google-gson/" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 13px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; color: rgb(0, 136, 204); text-decoration: none;">Homepage</a><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">). In this article we will see how we can convert Java objects into JSON strings using both the default Gson implementation and custom implementation.</span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">The readers of this article are encouraged to read the articles: </span><a href="http://www.javacreed.com/simple-gson-example/" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 13px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; color: rgb(0, 136, 204); text-decoration: none;">Simple Gson Example</a><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> and </span><a href="http://www.javacreed.com/gson-deserialiser-example/" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 13px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; color: rgb(0, 136, 204); text-decoration: none;">Gson Deserialiser Example</a><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">, if they are not familiar with Gson. Furthermore, this article is structured in the same way as the article </span><a href="http://www.javacreed.com/gson-deserialiser-example/" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 13px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; color: rgb(0, 136, 204); text-decoration: none;">Gson Deserialiser Example</a><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> and the same examples are used here.</span></div><h4 style="margin: 10px 0px; text-rendering: optimizelegibility; font-size: 18px;"><span style="font-size: 18px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px; font-weight: bold;">Observation</span></h4><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">
Please note the we will use the terms </span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; font-style: italic;">format</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> or </span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; font-style: italic;">serialise</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> interchangeably in this article.</span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">All code listed below is available at: </span><a href="http://java-creed-examples.googlecode.com/svn/gson/Gson%20Serialiser%20Example/" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 13px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; color: rgb(0, 136, 204); text-decoration: none;">http://java-creed-examples.googlecode.com/svn/gson/Gson Serialiser Example/</a><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">. Most of the examples will not contain the whole code and may omit fragments which are not relevant to the example being discussed. The readers can download or view all code from the above link.</span></div><h2 style="margin: 10px 0px; text-rendering: optimizelegibility; font-size: 30px;"><span style="font-size: 30px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 40px; font-weight: bold;">Simple Example</span></h2><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">Consider the following Java object.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">package com.javacreed.examples.gson.part1;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">public class Book {</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  private String[] authors;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  private String isbn10;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  private String isbn13;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  private String title;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  </span><span style="font-size: 13px; color: rgb(63, 127, 95); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">// Methods removed for brevity</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">}</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">This is a simple Java class representing a book. Say that we need to serialise this class into the following JSON object.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">{</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  "title": "Java Puzzlers: Traps, Pitfalls, and Corner Cases",</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  "isbn-10": "032133678X",</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  "isbn-13": "978-0321336781",</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  "authors": [</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    "Joshua Bloch",</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    "Neal Gafter"</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  ]</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">}</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">Gson can seriliase the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Book</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> class without any special configuration, just using the default configuration. Gson uses the Java field names as the JSON names and will serialise their values accordingly. If we take a closer look to the JSON sample shown above, we will see that the ISBN fields contain a minus sign: </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">isbn-10</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> and </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">isbn-13</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">. Unfortunately, we cannot obtain these field names using teh default Gson configuration. One way to address this problem is to use annotations as described in the article: </span><a href="http://www.javacreed.com/gson-annotations-example/" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 13px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; color: rgb(0, 136, 204); text-decoration: none;">Gson Annotations Example</a><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">. Using annotations we can define the JSON field names and Gson will take case of the rest. Another approach is to use a </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonSerialiser</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> (</span><a href="http://www.javacreed.com/gson-serialiser-example/" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 13px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; color: rgb(0, 136, 204); text-decoration: none;">Java Doc</a><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">) as shown in the following example.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">package com.javacreed.examples.gson.part1;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import java.lang.reflect.Type;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonArray;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonElement;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonObject;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonPrimitive;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonSerializationContext;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonSerializer;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">public class BookSerialiser implements JsonSerializer {</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    @Override</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    public JsonElement serialize(final Book book, final Type typeOfSrc, final JsonSerializationContext context) {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">        final JsonObject jsonObject = new JsonObject();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">        </span><span style="font-size: 13px; color: rgb(63, 127, 95); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">//The serialisation code is missing</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(63, 127, 95); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">        return jsonObject;</span></div><div><span style="font-size: 13px; color: rgb(63, 127, 95); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    }</span></div><div><span style="font-size: 13px; color: rgb(63, 127, 95); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">}</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">The above example is not complete and we still need to add the most important thing, which is the serialisation. Let’s understand this class before we make it more complex by adding more code to it. </span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">The interface </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonSerializer</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> requires a type, which is the type of object that we will be serialised. In this case, we are serialising the Java object of type </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Book</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> into JSON object. The return type of the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">serialize()</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> method must be an instance of type </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonElement</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> (</span><a href="http://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/JsonElement.html" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 13px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; color: rgb(0, 136, 204); text-decoration: none;">Java Doc</a><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">). As described in more detail in the article: </span><a href="http://www.javacreed.com/gson-deserialiser-example/" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 13px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; color: rgb(0, 136, 204); text-decoration: none;">Gson Deserialiser Example</a><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">, the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonElement</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> has four concrete types listed below:</span></div><ul style="padding:0px;margin:0px 0px 10px 25px;"><li><div><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonPrimitive</span><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;"> (</span><a href="http://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/JsonPrimitive.html" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 12px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px; color: rgb(0, 136, 204); text-decoration: none;">Java Doc</a><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;">) – such as a string or integer</span></div></li><li><div><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonObject</span><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;"> (</span><a href="http://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/JsonObject.html" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 12px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px; color: rgb(0, 136, 204); text-decoration: none;">Java Doc</a><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;">) – a collection of </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonElement</span><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;">s indexed by thier name (of type </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">String</span><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;">). This is similar to a </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Map&lt;String, JsonElement&gt;</span><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;"> (</span><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Map.html" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 12px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px; color: rgb(0, 136, 204); text-decoration: none;">Java Doc</a><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;">) </span></div></li><li><div><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonArray</span><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;"> (</span><a href="http://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/JsonArray.html" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 12px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px; color: rgb(0, 136, 204); text-decoration: none;">Java Doc</a><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;">) – a collection of </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonElement</span><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;">s. Note that the array elements can be any of the four types and mixed types are supported.</span></div></li><li><div><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonNull</span><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;"> (</span><a href="http://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/JsonArray.html" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 12px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px; color: rgb(0, 136, 204); text-decoration: none;">Java Doc</a><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;">) – a </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">null</span><span style="font-size: 12px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;"> value</span></div></li></ul><div style="background-image: none; background-attachment: scroll; background-color: rgb(255, 255, 255); border: 1px solid rgb(240, 240, 240); max-width: 96%; padding: 10px 5px 5px; text-align: center; margin: 5px auto 20px; width: 656px; background-position: 0% 0%; background-repeat: repeat repeat;"><div><a href="http://www.javacreed.com/wp-content/uploads/2012/12/Types-of-JsonElement.png" rel="prettyphoto" title="Types of JsonElement" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 12px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px; color: rgb(0, 136, 204); text-decoration: none;"><en-media hash="95eefb8e3ec6542793f616a2223175b0" type="image/png" style="vertical-align:middle;height:auto;max-width:100%;border:0px none;margin:0px;padding:0px;width:auto;visibility:visible;opacity:1;" width="646" title="" /><br /></a></div><div style="margin: 0px; font-size: 11px; padding: 5px 0px;"><span style="font-size: 11px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 17px; font-style: italic;">Types of JsonElement</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">The above image shows all types of </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonElement</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">. The </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonObject</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> can be thought of a collection of name/value pairs where the values are of type </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonElement</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">. Therefore, the values can yet be other objects.</span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">Following is a complete example of our serialiser.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">package com.javacreed.examples.gson.part1;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import java.lang.reflect.Type;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonArray;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonElement;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonObject;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonPrimitive;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonSerializationContext;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonSerializer;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">public class BookSerialiser implements JsonSerializer {</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    @Override</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    public JsonElement serialize(final Book book, final Type typeOfSrc, final JsonSerializationContext context) {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">        final JsonObject jsonObject = new JsonObject();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">        </span><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">jsonObject.addProperty("title", book.getTitle());</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">        jsonObject.addProperty("isbn-10", book.getIsbn10());</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">        jsonObject.addProperty("isbn-13", book.getIsbn13());</span></div><div><br /></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">        final JsonArray jsonAuthorsArray = new JsonArray();</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">        for (final String author : book.getAuthors()) {</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">            final JsonPrimitive jsonAuthor = new JsonPrimitive(author);</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">            jsonAuthorsArray.add(jsonAuthor);</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">        }</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">        jsonObject.add("authors", jsonAuthorsArray);</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">        return jsonObject;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    }</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">}</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">We added some code here. Let us break this into smaller parts and understand each individual part before understanding the whole picture.</span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">If we are to serialise this Java object, we first need to create the correct instance of the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonElement</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">. In our example we are returning an instance of </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonObject</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> as our </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Book</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> is an object as shown next.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final JsonObject jsonObject = new JsonObject();</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">This object will be populated with our fields using the names we like as shown next</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    </span><span style="font-size: 13px; color: rgb(63, 127, 95); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">// The variable 'book' is passed as a parameter to the serialize() method</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final JsonObject jsonObject = new JsonObject();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    </span><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">jsonObject.addProperty("title", book.getTitle());</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    jsonObject.addProperty("isbn-10", book.getIsbn10());</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    jsonObject.addProperty("isbn-13", book.getIsbn13());</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">Using the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">addProperty()</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> (</span><a href="http://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/JsonObject.html#addProperty(java.lang.String,%20java.lang.String)" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 13px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; color: rgb(0, 136, 204); text-decoration: none;">Java Doc</a><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">) method we can add any Java primitive together with </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">String</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">s and </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Number</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">s. Note that the property name must be unique, otherwise it will replace the previous value. This can be thought of a </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Map</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> (</span><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Map.html" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 13px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; color: rgb(0, 136, 204); text-decoration: none;">Java Doc</a><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">) holding all values index by their name.</span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">More complex objects such as Java objects and arrays cannot be added using the method shown above. The </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonObject</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> has another method called </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">add()</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> (</span><a href="http://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/JsonObject.html#add(java.lang.String,%20com.google.gson.JsonElement)" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 13px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; color: rgb(0, 136, 204); text-decoration: none;">Java Doc</a><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">), which can be used instead as shown below.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    </span><span style="font-size: 13px; color: rgb(63, 127, 95); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">// The variable 'book' is passed as a parameter to the serialize() method</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    jsonObject.addProperty("title", book.getTitle());</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    jsonObject.addProperty("isbn-10", book.getIsbn10());</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    jsonObject.addProperty("isbn-13", book.getIsbn13());</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    </span><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">final JsonArray jsonAuthorsArray = new JsonArray();</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    for (final String author : book.getAuthors()) {</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      final JsonPrimitive jsonAuthor = new JsonPrimitive(author);</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      jsonAuthorsArray.add(jsonAuthor);</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    }</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    jsonObject.add("authors", jsonAuthorsArray);</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">We first create the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonArray</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> and added all authors to it. Different from Java, we do not need to define the size of the array when initialising it. In fact, despite its name, we can think of the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonArray</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> class more as a list rather than array. Finally the variable </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">jsonAuthorsArray</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> is added to the json object. Note that we can add the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">jsonAuthorsArray</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> to the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">jsonObject</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> before adding its elements.</span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">Before we can use our serialiser, we need to register it with Gson as shown below.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">package com.javacreed.examples.gson.part1;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import java.io.IOException;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.Gson;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.GsonBuilder;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">public class Main {</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  public static void main(final String[] args) throws IOException {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    </span><span style="font-size: 13px; color: rgb(63, 127, 95); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">// Configure GSON</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final GsonBuilder gsonBuilder = new GsonBuilder();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    </span><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">gsonBuilder.registerTypeAdapter(Book.class, new BookSerialiser());</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    gsonBuilder.setPrettyPrinting();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final Gson gson = gsonBuilder.create();</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final Book javaPuzzlers = new Book();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    javaPuzzlers.setTitle("Java Puzzlers: Traps, Pitfalls, and Corner Cases");</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    javaPuzzlers.setIsbn10("032133678X");</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    javaPuzzlers.setIsbn13("978-0321336781");</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    javaPuzzlers.setAuthors(new String[] { "Joshua Bloch", "Neal Gafter" });</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    </span><span style="font-size: 13px; color: rgb(63, 127, 95); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">// Format to JSON</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final String json = gson.toJson(javaPuzzlers);</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    System.out.println(json);</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  }</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">}</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">By registering our serialiser, we are instructing Gson to using this serialiser whenever an object of type </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Book</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> is serialised.</span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">In the example shown above, we also instructed Gson to format the JSON object, by invoking the set pretty printing shown next.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    gsonBuilder.setPrettyPrinting();</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">While this is useful for tutorials and debugging, please avoid this in production environment as this may produce larger JSON objects (in terms of text size) due to the formatting. Furthermore, pretty printing has a </span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; font-style: italic;">slight</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> performance cost as Gson has to format the JSON objects and indent these accordingly.</span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">Running the above code will produce the desired JSON object. This concludes our first example of how to use a custom Gson serialiser to serialise Java objects into JSON objects. In the following section we will se how to serialise nested objects using Gson.</span></div><h2 style="margin: 10px 0px; text-rendering: optimizelegibility; font-size: 30px;"><span style="font-size: 30px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 40px; font-weight: bold;">Nested Objects</span></h2><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">In this example we will describe how to serialise nested objects, that is, objects within other objects. Here we will introduce a new entity, the author. A book, together with the title and ISBN can have a list of authors. The JSON object that will be produced in this example differs from the previous one to cater for the new entity as shown next:</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">{</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  "title": "Java Puzzlers: Traps, Pitfalls, and Corner Cases",</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  "isbn": "032133678X",</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  </span><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">"authors": [</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    {</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      "id": 1,</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      "name": "Joshua Bloch"</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    },</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    {</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      "id": 2,</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      "name": "Neal Gafter"</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    }</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  ]</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">}</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">Note that in the previous example the authors were simply an array of strings as shown next:</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  "authors": [</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    "Joshua Bloch",</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    "Neal Gafter"</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  ]</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">In this example, the authors are JSON objects, not just primitives as shown next.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      "id": 1,</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      "name": "Joshua Bloch"</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    }</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">The JSON author has an </span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; font-style: italic;">id</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> and a </span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; font-style: italic;">name</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">. Following is an example of the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Author</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> class.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">package com.javacreed.examples.gson.part2;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">public class Author {</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  private int id;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  private String name;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  </span><span style="font-size: 13px; color: rgb(63, 127, 95); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">// Methods removed for brevity</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">}</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">This class is very straightforward. It comprise two fields, both </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonPrimitive</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">s. The </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Book</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> class was modified to make use of the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Author</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">, as shown below.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">package com.javacreed.examples.gson.part2;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">public class Book {</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  </span><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">private Author[] authors;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  private String isbn;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  private String title;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  </span><span style="font-size: 13px; color: rgb(63, 127, 95); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">// Methods removed for brevity</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">}</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">The authors field was changed from an array of integers to an array of </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Author</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">s. The </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">BookSerialiser</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> class has to be modified too in order to accommodate this change, as shown below.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">package com.javacreed.examples.gson.part2;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import java.lang.reflect.Type;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonElement;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonObject;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonSerializationContext;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonSerializer;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">public class BookSerialiser implements JsonSerializer&lt;Book&gt; {</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  @Override</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  public JsonElement serialize(final Book book, final Type typeOfSrc, final JsonSerializationContext context) {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final JsonObject jsonObject = new JsonObject();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    jsonObject.addProperty("title", book.getTitle());</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    jsonObject.addProperty("isbn", book.getIsbn());</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    </span><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">final JsonElement jsonAuthros = context.serialize(book.getAuthors());</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    jsonObject.add("authors", jsonAuthros);</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    return jsonObject;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  }</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">}</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">The serialisation of the authors is delegated to the context (an instance of </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonSerializationContext</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> (</span><a href="http://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/JsonSerializationContext.html" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 13px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; color: rgb(0, 136, 204); text-decoration: none;">Java Doc</a><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">) passed as a parameter to the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">serialize()</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> method). The context will serialise the given objects and return a </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonElement</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">. In turn the context will try to locate a serialiser that can serialise the given object and if none are found, it uses the default mechanism. For the time being we will not write a serialiser for the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Author</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> class, but instead we will use the default one.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">package com.javacreed.examples.gson.part2;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import java.io.IOException;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.Gson;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.GsonBuilder;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">public class Main {</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  public static void main(final String[] args) throws IOException {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    </span><span style="font-size: 13px; color: rgb(63, 127, 95); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">// Configure GSON</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final GsonBuilder gsonBuilder = new GsonBuilder();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    gsonBuilder.registerTypeAdapter(Book.class, new BookSerialiser());</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    gsonBuilder.setPrettyPrinting();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final Gson gson = gsonBuilder.create();</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final Author joshuaBloch = new Author();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    joshuaBloch.setId(1);</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    joshuaBloch.setName("Joshua Bloch");</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final Author nealGafter = new Author();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    nealGafter.setId(2);</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    nealGafter.setName("Neal Gafter");</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final Book javaPuzzlers = new Book();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    javaPuzzlers.setTitle("Java Puzzlers: Traps, Pitfalls, and Corner Cases");</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    javaPuzzlers.setIsbn("032133678X");</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    javaPuzzlers.setAuthors(new Author[] { joshuaBloch, nealGafter });</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final String json = gson.toJson(javaPuzzlers);</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    System.out.println(json);</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  }</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">}</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">The above example, creates and configures Gson to use our </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">BookSerialiser</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">. We created two authors and a book and serialised the book. This will produce the JSON object shown at the beginning of this section.</span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">For completeness we will also include a serialiser for the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Author</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> class as shown below.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">package com.javacreed.examples.gson.part2;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import java.lang.reflect.Type;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonElement;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonObject;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonSerializationContext;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonSerializer;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">public class AuthorSerialiser implements JsonSerializer&lt;Author&gt; {</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  @Override</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  public JsonElement serialize(final Author author, final Type typeOfSrc, final JsonSerializationContext context) {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final JsonObject jsonObject = new JsonObject();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    jsonObject.addProperty("id", author.getId());</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    jsonObject.addProperty("name", author.getName());</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    return jsonObject;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  }</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">}</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">The above serialiser introduces no new features and thus requires no explanation. In order to use this new serialiser we need to register it with the </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">GsonBuilder</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> (</span><a href="http://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/GsonBuilder.html" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 13px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; color: rgb(0, 136, 204); text-decoration: none;">Java Doc</a><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">).</span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">This concludes the section about nested objects. Using the context, we can delegate the serialisation of nested objects to the context which will in turn locate the proper serialiser and produce the respective </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">JsonElement</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">. In the next and final section we will see how to deal with object references.</span></div><h2 style="margin: 10px 0px; text-rendering: optimizelegibility; font-size: 30px;"><span style="font-size: 30px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 40px; font-weight: bold;">Object References</span></h2><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">Objects refer to other objects and the books and authors classes are no exception. The same author can have many books. For example author </span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; font-style: italic;">Joshua Bloch</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> (</span><a href="http://www.amazon.com/Joshua-Bloch/e/B001CDCVUG" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 13px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; color: rgb(0, 136, 204); text-decoration: none;">Author at Amazon</a><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">), has several books. Using the serialiser described before, we will end up in duplicate authors. </span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">Consider the following example:</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">package com.javacreed.examples.gson.part3;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import java.io.IOException;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.Gson;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.GsonBuilder;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">public class Example1 {</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  public static void main(final String[] args) throws IOException {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    // Configure GSON</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final GsonBuilder gsonBuilder = new GsonBuilder();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    gsonBuilder.setPrettyPrinting();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final Gson gson = gsonBuilder.create();</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final Author joshuaBloch = new Author();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    joshuaBloch.setId(1);</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    joshuaBloch.setName("Joshua Bloch");</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final Author nealGafter = new Author();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    nealGafter.setId(2);</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    nealGafter.setName("Neal Gafter");</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final Book javaPuzzlers = new Book();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    javaPuzzlers.setTitle("Java Puzzlers: Traps, Pitfalls, and Corner Cases");</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    javaPuzzlers.setIsbn("032133678X");</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    javaPuzzlers.setAuthors(new Author[] { joshuaBloch, nealGafter });</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final Book effectiveJava = new Book();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    effectiveJava.setTitle("Effective Java (2nd Edition)");</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    effectiveJava.setIsbn("0321356683");</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    effectiveJava.setAuthors(new Author[] { joshuaBloch });</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final Book[] books = new Book[] { javaPuzzlers, effectiveJava };</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final String json = gson.toJson(books);</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    System.out.println(json);</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  }</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">}</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">Here we have two authors and two books. One of the author is shared between two books. Note that we have two author objects not three, as the instance representing </span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; font-style: italic;">Joshua Bloch</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> is shared between both books. Finally note that we are not using any custom serialisers on purpose. The following is produced when executing the above code.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">[</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    "authors": [</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">        "id": 1,</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">        "name": "Joshua Bloch"</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      },</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">        "id": 2,</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">        "name": "Neal Gafter"</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      }</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    ],</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    "isbn": "032133678X",</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    "title": "Java Puzzlers: Traps, Pitfalls, and Corner Cases"</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  },</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    "authors": [</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">        "id": 1,</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">        "name": "Joshua Bloch"</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      }</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    ],</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    "isbn": "0321356683",</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    "title": "Effective Java (2nd Edition)"</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  }</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">]</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">We have two JSON books and three JSON authors. The author: </span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; font-style: italic;">Joshua Bloch</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">, shown below, is duplicated.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">        "id": 1,</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">        "name": "Joshua Bloch"</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      }</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">This increases the size of the JSON object considerable, especially with more complex objects. Ideally, the book JSON object only contains the authors’ ids rather than the whole object. This resembles relational databases (</span><a href="http://en.wikipedia.org/wiki/Relational_database" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 13px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; color: rgb(0, 136, 204); text-decoration: none;">Wiki</a><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">) where the book has a foreign key (</span><a href="http://en.wikipedia.org/wiki/Foreign_key" target="_blank" style="cursor: pointer; transition: background 0s ease 0s, color 0.2s linear 0s; -webkit-transition: background 0s ease 0s, color 0.2s linear 0s; font-size: 13px; font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px; color: rgb(0, 136, 204); text-decoration: none;">Wiki</a><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">) to the authors table.</span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">The </span><span style="font-size: 12px; color: rgb(221, 17, 68); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 18px; background-color: rgb(247, 247, 249); border: 1px solid rgb(225, 225, 232); border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; padding: 2px 4px; background-position: initial initial; background-repeat: initial initial;">Book</span><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;"> class is modified to include a method that return just the authors’ ids as shown below.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">package com.javacreed.examples.gson.part3;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">public class Book {</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  private Author[] authors;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  private String isbn;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  private String title;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  public Author[] getAuthors() {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    return authors;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  }</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  </span><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">public int[] getAuthorsIds() {</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final int[] ids = new int[authors.length];</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    for (int i = 0; i &lt; ids.length; i++) {</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      ids[i] = authors[i].getId();</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    }</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    return ids;</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  }</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  </span><span style="font-size: 13px; color: rgb(63, 127, 95); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">// Other methods removed for brevity</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">}</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">When serialising the books we will use the authors’ id instead of the authors as shown next.</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">package com.javacreed.examples.gson.part3;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import java.lang.reflect.Type;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonElement;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonObject;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonSerializationContext;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">import com.google.gson.JsonSerializer;</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">public class BookSerialiser implements JsonSerializer {</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  @Override</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  public JsonElement serialize(final Book book, final Type typeOfSrc, final JsonSerializationContext context) {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final JsonObject jsonObject = new JsonObject();</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    jsonObject.addProperty("title", book.getTitle());</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    jsonObject.addProperty("isbn", book.getIsbn());</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    final JsonElement jsonAuthros = context.serialize(</span><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">book.getAuthorsIds()</span><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">);</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    jsonObject.add("authors", jsonAuthros);</span></div><div><br /></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    return jsonObject;</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  }</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">}</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">Using this serialiser we will obtain the following:</span></div><div style="padding: 9.5px; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin: 0px 0px 10px; word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">[</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    "title": "Java Puzzlers: Traps, Pitfalls, and Corner Cases",</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    "isbn": "032133678X",</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    </span><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">"authors": [</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      1,</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      2</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    ]</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  },</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  {</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    "title": "Effective Java (2nd Edition)",</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    "isbn": "0321356683",</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    </span><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">"authors": [</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">      1</span></div><div><span style="font-size: 13px; color: red; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">    ]</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">  }</span></div><div><span style="font-size: 13px; color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; line-height: 20px;">]</span></div></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">Now instead of the whole author object we have just the author’s ids. This approach requires less space than the previous one where the whole author is serialised. This will have a huge effect on larger object graphs.</span></div><div style="margin: 0px 0px 10px; font-size: 13px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 18px;">This example concludes this article about serialisation. Here we saw how we can serialise Java objects into JSON strings using default and custom serialisation options.</span></div><div style="clear:both;margin:10px 0px;"><h2 style="margin: 10px 0px; text-rendering: optimizelegibility; font-size: 30px;"><br /></h2></div></div><div style="margin-top:30px;border-bottom:medium none;"><div><div style="margin:0px 0px 20px;"><div style="margin: 0px 0px 10px; direction: ltr; width: 100%; max-width: 100%; box-sizing: border-box;"><div></div></div><div style="margin: 0px 0px 10px;"><span style="font-size: 13px; color: rgb(102, 102, 102); font-family: HelveticaNeue, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 20px;"> 

</span></div></div></div></div></div></div></div></div></span></div></div><div><br /></div></en-note>